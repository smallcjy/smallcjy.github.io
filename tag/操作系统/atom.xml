<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Hexo • Posts by &#34;操作系统&#34; tag</title>
    <link href="http://example.com" />
    <updated>2024-06-18T08:35:04.000Z</updated>
    <category term="C++" />
    <category term="架构和设计模式" />
    <category term="操作系统" />
    <category term="DragonOS" />
    <category term="计算机网络" />
    <category term="vue" />
    <category term="编译原理" />
    <entry>
        <id>http://example.com/2024/06/18/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</id>
        <title>操作系统--内存管理</title>
        <link rel="alternate" href="http://example.com/2024/06/18/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
        <content type="html">&lt;p&gt;为什么要使用虚拟内存的技术 abstract memory？&lt;/p&gt;
&lt;p&gt;允许系统允许多道程序并且不会相互影响&lt;/p&gt;
&lt;h1 id=&#34;static-relocation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#static-relocation&#34;&gt;#&lt;/a&gt; Static Relocation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;优点：&lt;br&gt;
不需要硬件支持&lt;/li&gt;
&lt;li&gt;缺点：
&lt;ul&gt;
&lt;li&gt;加载慢&lt;/li&gt;
&lt;li&gt;一旦加载，程序的代码或数据就不能移动到内存中，除非进行进一步的重新定位。&lt;/li&gt;
&lt;li&gt;加载程序需要一些方法来判断什么是地址，什么是常量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;address-space&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#address-space&#34;&gt;#&lt;/a&gt; Address Space&lt;/h1&gt;
&lt;p&gt;地址空间是一组地址，程序可以用来访问内存。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;relocation：将程序指令和数据的地址转换为物理地址的过程。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dynamic Relocation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个程序的地址空间映射到不同的 memory 上&lt;/li&gt;
&lt;li&gt;需要 base 和 limit 两个寄存器，用来存放地址空间的起始地址和 size，size 是虚拟地址的最大地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS 可以轻松的移动程序在执行的时候&lt;/li&gt;
&lt;li&gt;OS 允许程序的内存占用随时间的增长而扩张&lt;/li&gt;
&lt;li&gt;简单，快速的硬件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slow everything&lt;/li&gt;
&lt;li&gt;不可以在进程之间共享地址&lt;/li&gt;
&lt;li&gt;进程会被物理内存的 size 所限制&lt;/li&gt;
&lt;li&gt;复杂的内存管理&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;swapping-交换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swapping-交换&#34;&gt;#&lt;/a&gt; Swapping 交换&lt;/h1&gt;
&lt;p&gt;因为大部分的程序的大小都超过总内存&lt;/p&gt;
&lt;p&gt;Swapping：把整个进程装进内存，运行一段时间放回 disk&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Virtual memory&lt;/strong&gt;：允许进程部分装进内存运行&lt;/p&gt;
&lt;p&gt;Swapping 中会产生很多的 extern fraction 碎片，需要 compaction 压缩。&lt;/p&gt;
&lt;p&gt;solution：memory manage&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bitmap&lt;/li&gt;
&lt;li&gt;linked list：把 hole 用 link 连接起来&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;storage-placement-strategies&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#storage-placement-strategies&#34;&gt;#&lt;/a&gt; Storage Placement Strategies&lt;/h1&gt;
&lt;p&gt;如何从 list of hole 满足请求大小为 n 的内存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First Fit：使用第一个大小合适的 hole&lt;/li&gt;
&lt;li&gt;Next Fit：找到最后一个合适的 hole&lt;/li&gt;
&lt;li&gt;Best Fit：Use the hole whose size is equal to the need, or if none is equal, the hole that is larger but closest in size.&lt;/li&gt;
&lt;li&gt;Worst Fit：使用最大的 hole&lt;/li&gt;
&lt;li&gt;Quick Fit：
&lt;ul&gt;
&lt;li&gt;maintains separate lists for some of the more common sizes requested.&lt;/li&gt;
&lt;li&gt;When a request comes for placement it finds the closest fit.&lt;/li&gt;
&lt;li&gt;This is a very fast scheme, but a merge is expensive.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;overlaying-覆盖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#overlaying-覆盖&#34;&gt;#&lt;/a&gt; Overlaying 覆盖&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;overlaying：把程序分成小片，称为 overlays&lt;/li&gt;
&lt;li&gt;允许内存中存在一个或几个片，允许不同的 overlays 使用同一个地址空间&lt;/li&gt;
&lt;li&gt;overlays 的 swapping in 和 swapping out 由 OS 完成，但切片有程序员完成&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;virtual-memory&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#virtual-memory&#34;&gt;#&lt;/a&gt; Virtual Memory&lt;/h1&gt;
&lt;p&gt;虚拟内存：重点：把用户的 logic memory 和 physical memory 分离开来&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供用户需要的所有内存&lt;/li&gt;
&lt;li&gt;虚拟内存存在 disk 上&lt;/li&gt;
&lt;li&gt;只用一部分程序放在内存运行&lt;/li&gt;
&lt;li&gt;运行大量的进程创建&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;principle-of-locality-局部性原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#principle-of-locality-局部性原则&#34;&gt;#&lt;/a&gt; Principle of Locality 局部性原则&lt;/h2&gt;
&lt;p&gt;在操作系统的内存管理中，&amp;quot;局部性原理&amp;quot;（Locality of Reference）指的是在执行过程中，进程只会访问其全部页面中的一小部分。这意味着在任何给定的时间点，进程不需要将所有的页面都加载到物理内存中。这种现象有两种主要形式：&lt;/p&gt;
&lt;p&gt;时间局部性（Temporal Locality）：如果一个数据项被访问，那么它很可能在不久的将来再次被访问。例如，循环中使用的变量就展现了时间局部性。&lt;/p&gt;
&lt;p&gt;空间局部性（Spatial Locality）：如果一个数据项被访问，那么与它相邻的数据项很可能很快也会被访问。例如，顺序访问数组元素就展现了空间局部性。&lt;/p&gt;
&lt;h2 id=&#34;虚拟内存的实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟内存的实现&#34;&gt;#&lt;/a&gt; 虚拟内存的实现&lt;/h2&gt;
&lt;h3 id=&#34;paging&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#paging&#34;&gt;#&lt;/a&gt; Paging&lt;/h3&gt;
&lt;p&gt;page frame：物理内存的对应单元&lt;/p&gt;
&lt;p&gt;MMU：内存管理单元，负责虚拟地址和物理地址的转化&lt;/p&gt;
&lt;p&gt;virtual address：虚拟地址是进程用来访问自己的地址空间的内存地址&lt;/p&gt;
&lt;p&gt;Present/Absent bit：追踪当前页是否被映射，也就是是不是合法页&lt;/p&gt;
&lt;p&gt;使用没有映射的页会使得 CPU 陷入内存，这种 trap 称为&lt;strong&gt; page fault&lt;/strong&gt;，说明当前虚页没有被加载进内存，MMU 会选择一个使用过的 page，将其和 disk 中需要的 page 进行交换。选择算法和 page fault 的识别是后面的内容。&lt;/p&gt;
&lt;p&gt;page table：虚拟地址和物理地址的映射关系。&lt;/p&gt;
&lt;p&gt;Paging：映射过程&lt;/p&gt;
&lt;p&gt;虚拟地址：page number + offset&lt;/p&gt;
&lt;p&gt;page number ：page table 的 index&lt;/p&gt;
&lt;p&gt;offset：page 中的偏移量&lt;/p&gt;
&lt;p&gt;物理地址：frame number + offset&lt;/p&gt;
&lt;p&gt;page table 的目的是把 virtual page map into page frame&lt;/p&gt;
&lt;h3 id=&#34;page-table&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#page-table&#34;&gt;#&lt;/a&gt; page table&lt;/h3&gt;
&lt;p&gt;作用：map VPN into PFN&lt;br&gt;
 表项 entity：PTE 指向的 VPN 或者 PFN&lt;/p&gt;
&lt;p&gt;page table 放在寄存器：简单但是 cost&lt;/p&gt;
&lt;p&gt;page table 放在 memory：页表切换很简单，但是多次访问内存&lt;/p&gt;
&lt;p&gt;Solution：cache active part of page table&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TLBs，也称为 associative memory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把常用的 entry 缓存起来&lt;/p&gt;
&lt;h3 id=&#34;bits-in-a-tlb-entry&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bits-in-a-tlb-entry&#34;&gt;#&lt;/a&gt; Bits in a TLB Entry&lt;/h3&gt;
&lt;p&gt;同样是应用了局部性原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Virtual page Number&lt;/li&gt;
&lt;li&gt;Physical page number&lt;/li&gt;
&lt;li&gt;Valid&lt;/li&gt;
&lt;li&gt;Access bit：kernel and user&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进行 paging 的时候，优先根据 virtual page number 对 TLB 进行搜索查看有没有被缓存&lt;/p&gt;
&lt;p&gt;如何查到是 valid 的，直接实现翻译，不用再访问 page table；&lt;/p&gt;
&lt;p&gt;如果是 not valid 的，进行普通的 page table 映射，然后把这个 TLB 表项替代成当前找到的 page table entry。&lt;/p&gt;
&lt;p&gt;TLB hit ratio&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hardware-Controlled TLB&lt;/strong&gt;&lt;br&gt;
On a TLB miss&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hardware loads the PTE (Page Table Entry) into the TLB
&lt;ul&gt;
&lt;li&gt;Need to write back if there is no free entry&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Generate a fault if the page containing the PTE is invalid&lt;/li&gt;
&lt;li&gt;VM software performs fault handling&lt;/li&gt;
&lt;li&gt;Restart the CPU&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On a TLB hit, hardware checks the valid bit&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If valid, pointer to page frame in memory&lt;/li&gt;
&lt;li&gt;If invalid, the hardware generates a page fault
&lt;ul&gt;
&lt;li&gt;Perform page fault handling&lt;/li&gt;
&lt;li&gt;Restart the faulting instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Software-Controlled TLB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On a miss in TLB, generate a TLB fault, then trap to OS (software)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check if the page containing the PTE is in memory&lt;/li&gt;
&lt;li&gt;If no, perform page fault handling&lt;/li&gt;
&lt;li&gt;Write back if there is no free entry, then load the PTE into the TLB&lt;/li&gt;
&lt;li&gt;Restart the faulting instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On a hit in TLB, the hardware checks valid bit&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If valid, pointer to page frame in memory&lt;/li&gt;
&lt;li&gt;If invalid, the hardware generates a page fault
&lt;ul&gt;
&lt;li&gt;Perform page fault handling&lt;/li&gt;
&lt;li&gt;Restart the faulting instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;multilevel-page-table-多级页表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#multilevel-page-table-多级页表&#34;&gt;#&lt;/a&gt; Multilevel Page Table 多级页表&lt;/h2&gt;
&lt;p&gt;通过层次化的多张页表来负责地址转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减小页表的大小&lt;/li&gt;
&lt;li&gt;不用加载不需要的页表进入内存&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inverted-page-tables&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inverted-page-tables&#34;&gt;#&lt;/a&gt; Inverted Page Tables&lt;/h2&gt;
&lt;p&gt;一个 physical page frame 对应一张 PTE。&lt;/p&gt;
&lt;p&gt;物理 page number 是这张表的 index&lt;/p&gt;
&lt;p&gt;Vpage+pid hash 到 Ppagenumber&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linear Inverted Page Tables&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整个物理内存只有一张表，且一个 physical page frame 对应一张 PTE。&lt;/p&gt;
&lt;p&gt;表项为 process + virtual page&lt;/p&gt;
&lt;p&gt;The physical page number is used as an index into&lt;br&gt;
the table&lt;/p&gt;
&lt;p&gt;使用方法：就是对整张表进行搜索，查看哪个表项和提供的 pid 和 virtualpagenum 一致，该 index 就是对应的 Ppagenumber&lt;/p&gt;
&lt;p&gt;Lookup is difficult&lt;/p&gt;
&lt;h2 id=&#34;hashed-inverted-page-tables&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hashed-inverted-page-tables&#34;&gt;#&lt;/a&gt; Hashed Inverted Page Tables&lt;/h2&gt;
&lt;p&gt;在 page table 前添加一个 hash 表，The process ID and virtual page number are hashed to get an entry in the hash table，When hashing with hash table, there may be conflicts,&lt;br&gt;
which can be solved by using chain address method，Add the next field in the inverted page table items to&lt;br&gt;
form a linked list (the index of the header is in the&lt;br&gt;
hash table)&lt;/p&gt;
&lt;p&gt;不用线性搜索了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理 hash 链消耗&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;memory-management&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memory-management&#34;&gt;#&lt;/a&gt; Memory Management&lt;/h1&gt;
&lt;h2 id=&#34;fetch-strategiesdemand-fetching&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fetch-strategiesdemand-fetching&#34;&gt;#&lt;/a&gt; Fetch Strategies：Demand Fetching&lt;/h2&gt;
&lt;p&gt;只有在需要的时候才把页表写进内存。什么时候知道该页表被需要呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发生 Page fault 的时候&lt;/li&gt;
&lt;li&gt;检查发现虚存地址非法&lt;/li&gt;
&lt;li&gt;如果地址合法，检查是否在内存中有缓存&lt;/li&gt;
&lt;li&gt;如果没有，在内存中找到一张 free 的 page frame&lt;/li&gt;
&lt;li&gt;把地址 map 到 disk block，fetch disk block 到 page frame，阻塞用户进程&lt;/li&gt;
&lt;li&gt;等待 disk read 完成，添加 vm mapping for page frame&lt;/li&gt;
&lt;li&gt;重启进程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;page fault 发生时，把需要的 page 和相邻的 page 装进 memory&lt;/p&gt;
&lt;h2 id=&#34;page-replacement&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#page-replacement&#34;&gt;#&lt;/a&gt; Page Replacement&lt;/h2&gt;
&lt;p&gt;当发生 page fault 但没有多余的 free page frame 时 需要 replace&lt;/p&gt;
&lt;h3 id=&#34;page-replacement-algorithm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#page-replacement-algorithm&#34;&gt;#&lt;/a&gt; Page Replacement Algorithm&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Reference string&lt;/strong&gt;：一个序列，用来模拟或记录一个程序执行时访问内存地址的顺序，可以用来评估页面置换算法，计算按照引用串访问带来的 page fault 次数。&lt;/p&gt;
&lt;h2 id=&#34;1-the-optimal-algorithm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-the-optimal-algorithm&#34;&gt;#&lt;/a&gt; 1 The Optimal Algorithm&lt;/h2&gt;
&lt;p&gt;最优页面置换算法（Optimal Page Replacement Algorithm）是一种理论上的页面置换策略，用于决定当发生页面错误（page fault）且没有空闲页面帧时，应该替换哪个页面。该算法的目标是最小化页面错误的总数。&lt;/p&gt;
&lt;p&gt;最优算法的工作原理是：当需要替换一个页面时，它会选择那个在未来最长时间内不会被访问的页面进行替换。因为这种算法需要知道未来的页面访问序列，所以在实际操作系统中是不可实现的。然而，它在理论研究中非常有用，因为它提供了其他页面置换算法性能的上限（即最好情况）。&lt;/p&gt;
&lt;p&gt;简而言之，最优页面置换算法可以告诉我们在给定的引用串下，页面错误的最小可能数量是多少，但由于它需要未来的知识，因此不能在实际的操作系统中实现。&lt;/p&gt;
&lt;h2 id=&#34;2-fifo-页面置换算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-fifo-页面置换算法&#34;&gt;#&lt;/a&gt; 2 FIFO 页面置换算法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;维护一个队列，记录所有加载到内存中的页面的顺序。&lt;/li&gt;
&lt;li&gt;当一个新页面需要被加载到内存中，而内存已满时，算法会选择队列中最早进入的页面进行替换。&lt;/li&gt;
&lt;li&gt;被替换的页面会从队列中移除，新加载的页面加入队列的末尾。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;优点：实现简单&lt;/p&gt;
&lt;p&gt;缺点：最旧的页面可能会经常使用&lt;/p&gt;
&lt;h2 id=&#34;beladys-anomaly&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#beladys-anomaly&#34;&gt;#&lt;/a&gt; Belady‘s anomaly&lt;/h2&gt;
&lt;p&gt;Belady 的异常是指在使用某些页面置换算法（尤其是 FIFO 算法）时，系统为进程分配的物理内存帧数量增加，反而导致页面错误率增加的现象。这一异常直观上违反了常识，因为我们通常期望可用内存增加时，页面错误会减少，程序运行效率会提高。&lt;/p&gt;
&lt;p&gt;paging system 的三大组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reference string&lt;/li&gt;
&lt;li&gt;page replacement 算法&lt;/li&gt;
&lt;li&gt;内存中可用的 page frames&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-second-chance-page-replacement-算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-second-chance-page-replacement-算法&#34;&gt;#&lt;/a&gt; 3 Second Chance Page Replacement 算法&lt;/h2&gt;
&lt;p&gt;二次机会页面置换算法（Second Chance Page Replacement Algorithm），也称为时钟算法（Clock Algorithm），是一种改进的 FIFO 页面置换算法。它试图克服 FIFO 算法的主要缺点，即盲目地按照页面进入内存的顺序进行置换，而不考虑页面的使用情况。二次机会算法通过给每个页面一个 “二次机会” 来避免将频繁使用的页面置换出去&lt;/p&gt;
&lt;p&gt;Inspect R bit&lt;/p&gt;
&lt;p&gt;算法过程如下：&lt;/p&gt;
&lt;p&gt;初始化：维护一个循环队列，每个页面项包含一个访问位（Inspect R bit），初始时所有页面的访问位都设置为 0。&lt;br&gt;
页面访问：当一个页面被访问时，其对应的访问位设置为 1。&lt;br&gt;
页面置换：&lt;br&gt;
当需要置换一个页面时，算法从当前指针位置开始扫描循环队列。&lt;br&gt;
如果遇到的第一个页面的访问位为 1，则将其设置为 0，并给这个页面一个 “二次机会”，然后移动到下一个页面。&lt;br&gt;
如果遇到的页面访问位为 0，则选择这个页面进行置换，并将新页面插入其位置。&lt;br&gt;
这个过程像时钟的指针一样循环进行，因此得名 “时钟算法”。&lt;/p&gt;
&lt;h2 id=&#34;4-clock-page-replacement-algorithm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-clock-page-replacement-algorithm&#34;&gt;#&lt;/a&gt; 4 Clock Page Replacement Algorithm&lt;/h2&gt;
&lt;p&gt;3 的另一个实现&lt;/p&gt;
&lt;h2 id=&#34;5-not-recently-used-replacement-算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-not-recently-used-replacement-算法&#34;&gt;#&lt;/a&gt; 5 Not Recently Used Replacement 算法&lt;/h2&gt;
&lt;p&gt;Each page has Reference bit(R) and Modified bit(M).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bits are set when page is referenced (read or written recently), modified (written to)&lt;/li&gt;
&lt;li&gt;when a process starts, both bits R and M are set to 0 for all pages.&lt;/li&gt;
&lt;li&gt;periodically, (on each clock interval (20msec) ), the R bit is cleared. (i.e. R=0).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;page 会被定义成四个状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Class 0: not referenced, not modified&lt;/li&gt;
&lt;li&gt;Class 1: not referenced, modified&lt;/li&gt;
&lt;li&gt;Class 2: referenced, not modified&lt;/li&gt;
&lt;li&gt;Class 3: referenced, modified&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数字越小，替代的优先级越大&lt;/p&gt;
&lt;p&gt;NFU (Not Frequently Used) is implemented in software.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;At each clock interrupt, the R bit is added to the counter associated with each page. When a page fault occurs, the page with the lowest counter is replaced.&lt;/li&gt;
&lt;li&gt;Problem: NFU never forgets, so a page referenced frequency long ago may have the highest counter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Modified NFU = NFU with Aging - at each clock interrupt:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the counters are shifted right one bit, and&lt;/li&gt;
&lt;li&gt;the R bits are added to the leftmost bit.&lt;/li&gt;
&lt;li&gt;In this way, we can give higher priority to recent R values&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6-least-recently-used&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-least-recently-used&#34;&gt;#&lt;/a&gt; 6 Least Recently Used&lt;/h2&gt;
&lt;p&gt;throw out page that has been unused for longest time&lt;/p&gt;
&lt;p&gt;实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;软件：维持一个 linked list of pages，被使用过的放在前面，其余的放后面，cost！&lt;/li&gt;
&lt;li&gt;硬件：
&lt;ul&gt;
&lt;li&gt;a 64 bit counter
&lt;ul&gt;
&lt;li&gt;这个计数器会不断增长，调用内存后，再页表项中添加当前的 counter 的值&lt;/li&gt;
&lt;li&gt;replace 的时候选择 counter value 最小的值。&lt;/li&gt;
&lt;li&gt;周期性的清空 counter，不然装不下&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;a nXn bits 的矩阵（n 个 page）
&lt;ul&gt;
&lt;li&gt;When page frame K is referenced:
&lt;ol&gt;
&lt;li&gt;Set row K to all 1s.&lt;/li&gt;
&lt;li&gt;Set column K to all 0s.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;The row whose binary value is smallest is the LRU page.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7-the-working-set-page-replacement-算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-the-working-set-page-replacement-算法&#34;&gt;#&lt;/a&gt; 7 The Working Set Page Replacement 算法&lt;/h2&gt;
&lt;p&gt;The working set is the set of pages used by the k most recent memory references&lt;/p&gt;
&lt;p&gt;w(k,t) is the size of the working set at time t&lt;/p&gt;
&lt;p&gt;算法思想：&lt;/p&gt;
&lt;p&gt;当 page fault 发生时，选择一个不子啊工作集中的 page 替换他&lt;/p&gt;
&lt;p&gt;同样是局部性原理的体现！&lt;/p&gt;
&lt;p&gt;进程开始执行后，随着访问新页面逐步建立较稳定的工作集。&lt;br&gt;
当内存访问的局部性区域的位置大致稳定时，工作集大小也大致稳定；&lt;br&gt;
局部性区域的位置改变时，工作集快速扩张和收缩过渡到下一个稳定值。&lt;/p&gt;
&lt;p&gt;对所有的 page 进行 span，如果 R&lt;mark&gt;1，set time of last use to current virtual time，如果 R&lt;/mark&gt;0 且 age&amp;gt;t 则 remove page，如果 age&amp;lt; t remember the smallest time&lt;/p&gt;
&lt;p&gt;如果没有 age&amp;gt;t 的，就选择 age 最大的&lt;/p&gt;
&lt;h2 id=&#34;8-wsclock-page-replacement-算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-wsclock-page-replacement-算法&#34;&gt;#&lt;/a&gt; 8 WSClock Page Replacement 算法&lt;/h2&gt;
&lt;h2 id=&#34;page-size&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#page-size&#34;&gt;#&lt;/a&gt; Page Size&lt;/h2&gt;
&lt;p&gt;overhead = se/p + p/2&lt;/p&gt;
&lt;h1 id=&#34;segmentation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#segmentation&#34;&gt;#&lt;/a&gt; Segmentation&lt;/h1&gt;
&lt;p&gt;segmentation：为机器提供多个独立的 地址空间。&lt;/p&gt;
&lt;p&gt;segmented memory 允许 each table 生长&lt;/p&gt;
&lt;p&gt;A program is a collection of segments. A segment is a logical unit such as&lt;br&gt;
Main program&lt;br&gt;
Procedure&lt;br&gt;
Function&lt;br&gt;
Symbol table&lt;br&gt;
Stack&lt;/p&gt;
&lt;h1 id=&#34;segmentation-architecture&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#segmentation-architecture&#34;&gt;#&lt;/a&gt; Segmentation Architecture&lt;/h1&gt;
&lt;p&gt;Logical address consists of two parts:&lt;br&gt;
&amp;lt; virtual segment-number, offset &amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Segment table&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Maps two-dimensional user-defined addresses into one-dimensional physical addresses&lt;/p&gt;
&lt;p&gt;The virtual segment number is used as an index to the segment table&lt;/p&gt;
&lt;h1 id=&#34;segmentation-with-paging&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#segmentation-with-paging&#34;&gt;#&lt;/a&gt; Segmentation with paging&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Segmentation in virtual memory, paging in physical memory&lt;/li&gt;
&lt;li&gt;A segment is composed of pages&lt;/li&gt;
&lt;li&gt;An address has three components：segmentNumber+pageNumber+offset&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="操作系统" />
        <updated>2024-06-18T08:35:04.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/16/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</id>
        <title>操作系统--文件系统</title>
        <link rel="alternate" href="http://example.com/2024/06/16/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
        <content type="html">&lt;h1 id=&#34;1-file&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-file&#34;&gt;#&lt;/a&gt; 1 File&lt;/h1&gt;
&lt;p&gt;挑选难理解的概念进行讲解。&lt;/p&gt;
&lt;p&gt;三种文件种类：byte sequence 、 record sequence 、 tree&lt;/p&gt;
&lt;p&gt;文件类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Regular files：普通文件，分为文本文件和二进制文件&lt;/li&gt;
&lt;li&gt;Directories：目录&lt;/li&gt;
&lt;li&gt;Character special file：特殊字符文件，模拟 io 设备比如终端、打印机和网络&lt;/li&gt;
&lt;li&gt;Block special files：块文件，模拟 disk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文件访问：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顺序访问：从头开始读文件，不可以跳跃，可以回退和后退，在磁盘媒介中比较便利&lt;/li&gt;
&lt;li&gt;随机访问：随意读取文件，file marker 用来定位开始 read 的位置，就是 seek 操作。可以先读在 seek 也可以先 seek，再读&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;metadata：文件属性（file attribute）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;文件操作&lt;/p&gt;
&lt;h1 id=&#34;2-directory-目录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-directory-目录&#34;&gt;#&lt;/a&gt; 2 Directory 目录&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;文件系统通过目录来查找文件&lt;/li&gt;
&lt;li&gt;目录是一个文件名和文件位置相同的文件&lt;/li&gt;
&lt;li&gt;directory entries 拥有文件的信息。目录下有文件创建，文件条目也跟着创建，有文件删除，条目也跟着删除；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目录的好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方便查找文件&lt;/li&gt;
&lt;li&gt;文件可以在不同目录下重复命名&lt;/li&gt;
&lt;li&gt;归类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目录系统：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单目录系统&lt;/li&gt;
&lt;li&gt;多目录系统&lt;/li&gt;
&lt;li&gt;层次目录系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路径分为相对路径和绝对路径&lt;/p&gt;
&lt;h1 id=&#34;3-文件系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-文件系统&#34;&gt;#&lt;/a&gt; 3 文件系统&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;超级块&lt;/strong&gt;：描述文件系统的状态：分区大小，块大小，指向空块的指针列表，root 目录的 inode number，magic number&lt;/p&gt;
&lt;p&gt;文件系统认为 disk 是一个 block 数组&lt;/p&gt;
&lt;p&gt;实现文件存储就是最追踪 file 放在哪些 disk block 中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contiguous Allocation&lt;/li&gt;
&lt;li&gt;Linked List Allocation&lt;/li&gt;
&lt;li&gt;Indexed Allocation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;contiguous-allocation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#contiguous-allocation&#34;&gt;#&lt;/a&gt; Contiguous Allocation&lt;/h2&gt;
&lt;p&gt;把 file 储存在相邻的 blocks 中&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单实现&lt;/li&gt;
&lt;li&gt;读操作非常高效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存在 external fragmentation，块与块之间有没利用的外部碎片&lt;/li&gt;
&lt;li&gt;file 一旦创建，文件的大小无法改变&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Good for CD-ROMs, DVDs and other write-once optical media&lt;/p&gt;
&lt;h2 id=&#34;linked-list-allocation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linked-list-allocation&#34;&gt;#&lt;/a&gt; Linked List Allocation&lt;/h2&gt;
&lt;p&gt;使用一串用指针连接的 Link list 的块来储存 file，block 的头部储存指向下一个块的指针&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有 external fragmentation&lt;/li&gt;
&lt;li&gt;目录条目简单，只用储存第一个块的第一个字的地址&lt;/li&gt;
&lt;li&gt;file 的大小可以变化&lt;/li&gt;
&lt;li&gt;对顺序访问很友好&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;随机访问很慢&lt;/li&gt;
&lt;li&gt;块中的 data 的数目不是 2 的次方&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linked-list-allocation-using-fat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linked-list-allocation-using-fat&#34;&gt;#&lt;/a&gt; Linked List Allocation Using FAT&lt;/h2&gt;
&lt;p&gt;FAT：index table 存放着每个块的 table pointer word&lt;/p&gt;
&lt;p&gt;FAT 文件系统中，disk 的数据区被划分为多个蔟，文件的储存需要分配蔟，而 FAT 表就是记录这些文件分配到的蔟的地址，如果一个文件大小大于一个蔟的大小，就会被分配到多个蔟，FAT 表就会记录这些蔟的连接关系&lt;/p&gt;
&lt;p&gt;就是单独建立一张表来记录一个文件所用的块的连接关系，用于搜索&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分区的第一个 section 会存放 FAT&lt;/li&gt;
&lt;li&gt;FAT 可以读入内存中以减小 disk seek&lt;/li&gt;
&lt;li&gt;disk 中一块一个 FAT entry，按块号排序&lt;/li&gt;
&lt;li&gt;每一个 entry 持有下一个 block 的地址&lt;/li&gt;
&lt;li&gt;最后一个文件标记 - 1&lt;/li&gt;
&lt;li&gt;-2 表示该蔟是空的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整个块对 data 是可用的&lt;/li&gt;
&lt;li&gt;可以通过对 FAT 的扫描实现随机访问&lt;/li&gt;
&lt;li&gt;目录条目只需要一个 number：starting block number（文件的第一块对于 FAT 表的索引）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整张表需要拷贝进内存，挤占内存空间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inodeindex-node&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inodeindex-node&#34;&gt;#&lt;/a&gt; inode（index node）&lt;/h2&gt;
&lt;p&gt;每个文件都有自己的 inode，inode 里列举了文件属性和文件所有的 data block 的地址&lt;/p&gt;
&lt;p&gt;inode 内部的块地址分配也有直接和间接两种，间接又分为 single indirect block、double indirect block 和 triple indirect block 三种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A single indirect block contains pointers to data blocks.&lt;/li&gt;
&lt;li&gt;A double indirect block contains pointers to single&lt;br&gt;
indirect blocks.&lt;/li&gt;
&lt;li&gt;A triple indirect block contains pointers to double indirect blocks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快速的查找和随机访问&lt;/li&gt;
&lt;li&gt;没有外部碎片&lt;/li&gt;
&lt;li&gt;文件被打开时，对应文件的 inode 才被加载到内存中，占用小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;索引开销大&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;目录实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录实现&#34;&gt;#&lt;/a&gt; 目录实现&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目录的储存和文件的储存方式一样&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目录条目也储存在 data block 中&lt;/li&gt;
&lt;li&gt;目录文件就是一个目录条目列表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件打开时，文件系统会使用文件路径来定位目录条目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目录条目提供找到 disk block 的需要信息：文件地址 / 第一个块的块号 /inode 号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件属性的位置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在目录条目中&lt;/li&gt;
&lt;li&gt;在一个单独的数据结构中
&lt;ul&gt;
&lt;li&gt;目录条目保存有文件名和 inode number&lt;/li&gt;
&lt;li&gt;文件属性放在 inode 里&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问题：如果目录中有很长的文件名怎么办&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;给储存名字的地方的大小固定大一点&lt;/li&gt;
&lt;li&gt;Directory entry comprises fixed and variable portion (in line)&lt;br&gt;
 缺点：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;文件移除的时候会出现大小不同的间隔&lt;/li&gt;
&lt;li&gt;文件名可能跨页，导致页错误&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;目录条目固定大小，但是存放文件名的地方是一个指向对堆区的指针，指向文件名&lt;br&gt;
缺点：管理堆区；页错误同样会发生&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;share-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#share-files&#34;&gt;#&lt;/a&gt; Share Files&lt;/h2&gt;
&lt;p&gt;Hard Link：两个目录有共享文件，则分别指向同一个 inode。&lt;/p&gt;
&lt;p&gt;Symbolic Link（Soft Link）：如果一个目录下想创建另一个文件的共享文件，则创建一个类型为 Link 的文件，文件内保存有共享文件的路径。&lt;/p&gt;
&lt;p&gt;Hard Link 文件的删除：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在每个 inode 中增加引用次数&lt;/li&gt;
&lt;li&gt;计算指向该 inode 的引用次数&lt;/li&gt;
&lt;li&gt;当删除一个 Link 时，引用次数减 1&lt;/li&gt;
&lt;li&gt;当引用次数为 0 时，删除共享文件的 file data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;软 Link 文件删除：&lt;/p&gt;
&lt;p&gt;Hard Link 的限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不能跨分区建立连接&lt;/li&gt;
&lt;li&gt;如果其中一个文件被移动到另一个文件系统，则会将其复制，并相应地调整两个文件的链接计数&lt;/li&gt;
&lt;li&gt;只用管理员才可以建立对目录的硬链接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Soft Link 的限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extra space on disk and extra i-node to store&lt;br&gt;
the link file&lt;/li&gt;
&lt;li&gt;Extra overhead in the traversing path&lt;/li&gt;
&lt;li&gt;If the original file is moved to a different&lt;br&gt;
location, it can no longer be accessed via the&lt;br&gt;
symbolic link (dangling link)&lt;/li&gt;
&lt;li&gt;Having multiple copies of a file may set&lt;br&gt;
copied when dumping a file onto a tape.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;block-size&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#block-size&#34;&gt;#&lt;/a&gt; block size：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Large：higher data rate, lower space utilization&lt;/li&gt;
&lt;li&gt;Small： lower data rate, higher space utilization&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;追踪空余的块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#追踪空余的块&#34;&gt;#&lt;/a&gt; 追踪空余的块&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linked list&lt;/li&gt;
&lt;li&gt;Bit-Map：每个块对应一位，1 表示空，0 表示非空&lt;/li&gt;
&lt;li&gt;counting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linked list vs Bit-Map：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存放空块号的 block 要求，Bit-Map 远小于 Linked list&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文件系统的backup-备份&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件系统的backup-备份&#34;&gt;#&lt;/a&gt; 文件系统的 backup 备份&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Physical dump&lt;/li&gt;
&lt;li&gt;Logical dump&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="操作系统" />
        <updated>2024-06-16T09:25:07.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/16/IO%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E8%AE%BE%E5%A4%87/</id>
        <title>IO输入输出设备</title>
        <link rel="alternate" href="http://example.com/2024/06/16/IO%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E8%AE%BE%E5%A4%87/"/>
        <content type="html">&lt;h2 id=&#34;1-principle-of-io-software&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-principle-of-io-software&#34;&gt;#&lt;/a&gt; 1 Principle of IO Software&lt;/h2&gt;
&lt;h3 id=&#34;11-goals-of-io-software&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-goals-of-io-software&#34;&gt;#&lt;/a&gt; 1.1 Goals of IO Software&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;设备独立性
&lt;ul&gt;
&lt;li&gt;程序可以访问任何的 IO 设备&lt;/li&gt;
&lt;li&gt;不会提前对设备进行特殊处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Uniform naming 通用命名
&lt;ul&gt;
&lt;li&gt;文件和设备的名字是字符串或者数字&lt;/li&gt;
&lt;li&gt;不会依赖某个机器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Error handling
&lt;ul&gt;
&lt;li&gt;处理错误&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;同步和异步传输数据&lt;/li&gt;
&lt;li&gt;Buffering
&lt;ul&gt;
&lt;li&gt;有缓存机制，数据来到设备不会直接储存到最终目的地&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可共享设备和私有设备&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12-io-operations&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-io-operations&#34;&gt;#&lt;/a&gt; 1.2 IO Operations&lt;/h3&gt;
&lt;h4 id=&#34;121-programmed-io&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#121-programmed-io&#34;&gt;#&lt;/a&gt; 1.2.1 Programmed IO&lt;/h4&gt;
&lt;p&gt;CPU 经常被 IO 设备占用知道 IO 设备任务完成，这在多处理器设备中是不高效的。&lt;/p&gt;
&lt;p&gt;Polling 轮询：CPU 轮询设备的寄存器查看它的状态是 ready 还是 busy 还是 error&lt;/p&gt;
&lt;h4 id=&#34;122-interrupt-driven-io&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#122-interrupt-driven-io&#34;&gt;#&lt;/a&gt; 1.2.2 Interrupt-Driven IO&lt;/h4&gt;
&lt;p&gt;IO 中断设备&lt;/p&gt;
&lt;p&gt;在应用 Buffer 的 content copy 到内核的 buffer 后会允许中断，如果设备忙，cpu 不会 wait 而是 Scheduling 其他的进程。当设备使用完毕后，设备的 controller 会发送 hardware Interrupt 启动中断服务：&lt;/p&gt;
&lt;p&gt;当内核 buffer 的 content 写进 设备时，设备状态恢复 ready。&lt;/p&gt;
&lt;h4 id=&#34;123-io-using-dma&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#123-io-using-dma&#34;&gt;#&lt;/a&gt; 1.2.3 IO using DMA&lt;/h4&gt;
&lt;p&gt;中断驱动 IO 设备的缺点是中断发生在每一个字符的传输，每个字符写入设备寄存器都会经历完成的中断流程。&lt;/p&gt;
&lt;p&gt;DMA 控制器会负责内核 buffer 到 Device buffer 的字符传输，CPU 不需要关心这个传输过程。&lt;/p&gt;
&lt;p&gt;当 DMA 传输完成后 CPU 会被中断，通知 CPU 传输完成。&lt;/p&gt;
&lt;h2 id=&#34;2-io-software-layers&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-io-software-layers&#34;&gt;#&lt;/a&gt; 2 IO software layers&lt;/h2&gt;
&lt;h3 id=&#34;21硬件和驱动之间的一层-interrupt-handlers&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21硬件和驱动之间的一层-interrupt-handlers&#34;&gt;#&lt;/a&gt; 2.1 硬件和驱动之间的一层 --Interrupt handlers&lt;/h3&gt;
&lt;p&gt;当中断发生时，CPU 会保存必要的数据和状态然后跳转到 Interrupt-handler routine，它存放在内存中存放中断服务的地方。具体位置由 Interrupt vector 决定。&lt;/p&gt;
&lt;p&gt;中断完成后 OS 会执行的事件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保存 regs（数据、状态、地址）&lt;/li&gt;
&lt;li&gt;设置中断服务程序的上下文：TLB，MMU and page table&lt;/li&gt;
&lt;li&gt;设置中断服务的 stack&lt;/li&gt;
&lt;li&gt;修改中断控制器，允许中断&lt;/li&gt;
&lt;li&gt;复制保存进程表的寄存器&lt;/li&gt;
&lt;li&gt;运行中断服务&lt;/li&gt;
&lt;li&gt;调度下一个运行进程&lt;/li&gt;
&lt;li&gt;设置下一个运行进程 MMU 上下文&lt;/li&gt;
&lt;li&gt;加载新的 PC&lt;/li&gt;
&lt;li&gt;开始运行新的进程&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;22-设备驱动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-设备驱动&#34;&gt;#&lt;/a&gt; 2.2 设备驱动&lt;/h3&gt;
&lt;p&gt;设备驱动是设备控制器和 OS 之间的接口&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备驱动函数&lt;/strong&gt;&lt;br&gt;
作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接受来自 os 的 Abstract 读写请求，把这些抽象请求重写成适配与设备的具体的请求。&lt;/li&gt;
&lt;li&gt;初始化设备&lt;/li&gt;
&lt;li&gt;检查设备使用状态，推送请求队列&lt;/li&gt;
&lt;li&gt;issue 控制设备的命令序列&lt;/li&gt;
&lt;li&gt;检查错误&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;23-device-independent-io-software-设备独立软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-device-independent-io-software-设备独立软件&#34;&gt;#&lt;/a&gt; 2.3 Device-Independent IO software 设备独立软件&lt;/h3&gt;
&lt;p&gt;设备独立软件的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uniform interfacing for device drivers&lt;/li&gt;
&lt;li&gt;buffers&lt;/li&gt;
&lt;li&gt;error reporting&lt;/li&gt;
&lt;li&gt;allocating and releasing dedicate device&lt;/li&gt;
&lt;li&gt;providing a device-independent block size&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;231-uniform-interfacing&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#231-uniform-interfacing&#34;&gt;#&lt;/a&gt; 2.3.1 Uniform interfacing&lt;/h4&gt;
&lt;p&gt;设备驱动需要有一个统一的接口规范。&lt;/p&gt;
&lt;p&gt;好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;驱动开发者会知道希望开发什么样的驱动服务&lt;/li&gt;
&lt;li&gt;系统开发者可以开发设备独立软件在驱动层之上，为驱动提供服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设备号连接一个合适的设备驱动&lt;/p&gt;
&lt;h4 id=&#34;232-buffering&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#232-buffering&#34;&gt;#&lt;/a&gt; 2.3.2 buffering&lt;/h4&gt;
&lt;h4 id=&#34;233-error-reporting&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#233-error-reporting&#34;&gt;#&lt;/a&gt; 2.3.3 error reporting&lt;/h4&gt;
&lt;h4 id=&#34;234-allocating-dedicate-device&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#234-allocating-dedicate-device&#34;&gt;#&lt;/a&gt; 2.3.4 allocating dedicate device&lt;/h4&gt;
&lt;h2 id=&#34;3-disk&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-disk&#34;&gt;#&lt;/a&gt; 3 Disk&lt;/h2&gt;
&lt;h3 id=&#34;31-magnetic-disk-磁盘&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-magnetic-disk-磁盘&#34;&gt;#&lt;/a&gt; 3.1 magnetic disk 磁盘&lt;/h3&gt;
&lt;p&gt;由多个 cylinder（柱面）组成，每个柱面包含多个 tracks 道，track 又可以分为多个 sector 扇区。&lt;/p&gt;
&lt;h3 id=&#34;32disk格式化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32disk格式化&#34;&gt;#&lt;/a&gt; 3.2&lt;strong&gt;disk 格式化&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;disk 格式化后，disk 只有 empty bits&lt;br&gt;
 每个 platter 盘片都需要有 low-level format 和 high-level format&lt;/p&gt;
&lt;p&gt;low-level format：把 disk 分成 sectors 可以被 disk 控制器识别读写。由 vendors 完成&lt;/p&gt;
&lt;p&gt;track 的格式化：把 track 按 inter-sector-gap 分隔成一个个 sector。sector 由 preamble（前导号，由位模式、柱面号、扇区号组成）、data（512 bytes）、ECC 组成&lt;/p&gt;
&lt;h3 id=&#34;33-cylinder-skew-柱面斜进&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-cylinder-skew-柱面斜进&#34;&gt;#&lt;/a&gt; 3.3 cylinder skew 柱面斜进&lt;/h3&gt;
&lt;p&gt;不同磁道的同一个扇区号不是分布在同一个半径上的，而是有一定的斜度，保证每次 disk header 在切换磁道后都是从 0 号扇区开始。这是由于不同磁道的周长是不一样的&lt;/p&gt;
&lt;p&gt;下面是计算斜进量的公式&lt;/p&gt;
&lt;p&gt;cylinder skew = seek time / per sectors time&lt;/p&gt;
&lt;h3 id=&#34;34-interleaving&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-interleaving&#34;&gt;#&lt;/a&gt; 3.4 interleaving&lt;/h3&gt;
&lt;p&gt;扇区在磁道中不是按顺序排列的，是交错排列的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;single interleaving&lt;/li&gt;
&lt;li&gt;double interleaving&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;35-disk-arm-scheduling-算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#35-disk-arm-scheduling-算法&#34;&gt;#&lt;/a&gt; 3.5 Disk ARM Scheduling 算法&lt;/h3&gt;
&lt;p&gt;用于管理磁盘的磁头臂移动的算法&lt;/p&gt;
&lt;p&gt;读写磁盘块的时间 = seek time+rotational time+data transfer time&lt;/p&gt;
&lt;p&gt;算法会对磁道的访问请求进行排序来减小磁盘臂的移动&lt;/p&gt;
&lt;h4 id=&#34;351-fcfs算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#351-fcfs算法&#34;&gt;#&lt;/a&gt; 3.5.1 FCFS 算法&lt;/h4&gt;
&lt;h4 id=&#34;352-ssf算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#352-ssf算法&#34;&gt;#&lt;/a&gt; 3.5.2 SSF 算法&lt;/h4&gt;
&lt;p&gt;当前位置移动到目标柱面所需 seek time 最小的优先选择&lt;/p&gt;
&lt;h4 id=&#34;353-elevator-算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#353-elevator-算法&#34;&gt;#&lt;/a&gt; 3.5.3 Elevator 算法&lt;/h4&gt;
&lt;p&gt;算法思想：单方向的移动磁盘臂，处理这个方向上的柱面请求，处理完成后换个方向重复执行。&lt;/p&gt;
&lt;h4 id=&#34;354-错误处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#354-错误处理&#34;&gt;#&lt;/a&gt; 3.5.4 错误处理&lt;/h4&gt;
&lt;p&gt;小的错误由 ECC correct，整个扇区损坏需要由 Disk controller 或者 OS 处理。&lt;/p&gt;
&lt;p&gt;处理错误的两个方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disk controller：在传入时检查，发现错误的扇区进行标记并用空格取代，每个磁道会预留几个空白扇区用来取代 bad section。&lt;/li&gt;
&lt;li&gt;OS：检查错误的扇区并记录他们&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="操作系统" />
        <updated>2024-06-16T04:56:26.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/06/04/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F--%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E4%B8%8E%E8%B0%83%E5%BA%A6/</id>
        <title>操作系统--进程通信与调度</title>
        <link rel="alternate" href="http://example.com/2024/06/04/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F--%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E4%B8%8E%E8%B0%83%E5%BA%A6/"/>
        <content type="html">&lt;h2 id=&#34;1-&amp;#x8FDB;&amp;#x7A0B;process&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-&amp;#x8FDB;&amp;#x7A0B;process&#34;&gt;#&lt;/a&gt; 1 &amp;#x8FDB;&amp;#x7A0B; Process&lt;/h2&gt;
&lt;p&gt;&amp;#x5982;&amp;#x4F55;&amp;#x5B9A;&amp;#x4E49; process&amp;#xFF1A;&amp;#xFF08;process &amp;#x7684;&amp;#x51E0;&amp;#x4E2A;&amp;#x5B9A;&amp;#x4E49;&amp;#x7279;&amp;#x70B9;&amp;#xFF09;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sequence Execution &amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#xFF1A;&amp;#x4E00;&amp;#x4E2A;&amp;#x6709;&amp;#x72EC;&amp;#x7ACB;&amp;#x529F;&amp;#x80FD;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x72EC;&amp;#x5360;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x76F4;&amp;#x81F3;&amp;#x6700;&amp;#x7EC8;&amp;#x7ED3;&amp;#x675F;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&lt;/li&gt;
&lt;li&gt;Concurrency Execution&amp;#xFF1A;&amp;#x5E76;&amp;#x53D1;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5177;&amp;#x6709;&amp;#x5E76;&amp;#x53D1;&amp;#x6027;&amp;#xFF0C;&amp;#x591A;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E92;&amp;#x4E0D;&amp;#x5E72;&amp;#x6270;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x8FD0;&amp;#x884C;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;The Process Model&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Multiprogramming of four programs&amp;#xFF08;one PC&amp;#xFF09;&lt;/li&gt;
&lt;li&gt;Conceptual model of 4 independent&amp;#xFF0C;sequential  processes&lt;/li&gt;
&lt;li&gt;Only one program active at any instant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Process Concept&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF1A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5177;&amp;#x6709;&amp;#x4E00;&amp;#x5B9A;&amp;#x72EC;&amp;#x7ACB;&amp;#x529F;&amp;#x80FD;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5173;&amp;#x4E8E;&amp;#x67D0;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x5408;&amp;#x7684;&amp;#x4E00;&amp;#x6B21;&amp;#x6D3B;&amp;#x52A8;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#xFF1A;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x7A0B;&amp;#x5E8F;&amp;#x662F;&amp;#x547D;&amp;#x4EE4;&amp;#x7684;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x9759;&amp;#x6001;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;&amp;#xFF1B;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x63CF;&amp;#x8FF0;&amp;#x5E76;&amp;#x53D1;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x52A8;&amp;#x6001;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5305;&amp;#x542B;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;pcb&amp;#xFF08;&amp;#x8FDB;&amp;#x7A0B;&amp;#x63A7;&amp;#x5236;&amp;#x5757;&amp;#xFF09;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x662F;&amp;#x6682;&amp;#x65F6;&amp;#x7684;&amp;#xFF0C;&amp;#x6709;&amp;#x5173;&amp;#x95ED;&amp;#x7684;&amp;#x65F6;&amp;#x523B;&amp;#xFF1B;&amp;#x7A0B;&amp;#x5E8F;&amp;#x662F;&amp;#x6C38;&amp;#x4E45;&amp;#x7684;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x5199;&amp;#x597D;&amp;#x5C31;&amp;#x4E00;&amp;#x76F4;&amp;#x5B58;&amp;#x5728;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;&amp;#x591A;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6765;&amp;#x8FD0;&amp;#x884C;&amp;#x5404;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#xFF1B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD0;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x521B;&amp;#x9020;&amp;#x5176;&amp;#x4ED6;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF1B;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x4F55;&amp;#x65F6;&amp;#x521B;&amp;#x5EFA;&amp;#x8FDB;&amp;#x7A0B;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x7CFB;&amp;#x7EDF;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x65F6;&amp;#xFF1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E24;&amp;#x79CD;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF1A;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Foreground Process&amp;#xFF1A;&amp;#x4E0E;&amp;#x7528;&amp;#x6237;&amp;#x4EA4;&amp;#x4E92;&amp;#x63D0;&amp;#x4F9B;&amp;#x670D;&amp;#x52A1;&lt;/li&gt;
&lt;li&gt;Background Process&amp;#xFF1A;&amp;#x5904;&amp;#x7406;&amp;#x7528;&amp;#x6237;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x53C8;&amp;#x79F0;&amp;#x4E3A; daemon&amp;#xFF08;&amp;#x5B88;&amp;#x62A4;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF09;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;fork&amp;#xFF08;&amp;#xFF09;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8C03;&amp;#x7528;&lt;/li&gt;
&lt;li&gt;&amp;#x7528;&amp;#x6237;&amp;#x8BF7;&amp;#x6C42;&lt;/li&gt;
&lt;li&gt;Initiation of a batch job&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;11&amp;#x4F55;&amp;#x65F6;&amp;#x7EC8;&amp;#x6B62;&amp;#x8FDB;&amp;#x7A0B;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11&amp;#x4F55;&amp;#x65F6;&amp;#x7EC8;&amp;#x6B62;&amp;#x8FDB;&amp;#x7A0B;&#34;&gt;#&lt;/a&gt; 1.1&lt;strong&gt; &amp;#x4F55;&amp;#x65F6;&amp;#x7EC8;&amp;#x6B62;&amp;#x8FDB;&amp;#x7A0B;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&amp;#x7EC8;&amp;#x6B62;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x6761;&amp;#x4EF6;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Normal exit&lt;/li&gt;
&lt;li&gt;Error exit&lt;/li&gt;
&lt;li&gt;Fatal error&lt;/li&gt;
&lt;li&gt;Killed by another process&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12&amp;#x8FDB;&amp;#x7A0B;&amp;#x5C42;&amp;#x6B21;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12&amp;#x8FDB;&amp;#x7A0B;&amp;#x5C42;&amp;#x6B21;&#34;&gt;#&lt;/a&gt; 1.2&lt;strong&gt; &amp;#x8FDB;&amp;#x7A0B;&amp;#x5C42;&amp;#x6B21;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&amp;#x7236;&amp;#x8FDB;&amp;#x7A0B;&amp;#x3001;&amp;#x5B50;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5F62;&amp;#x6210;&amp;#x7684;&amp;#x5C42;&amp;#x7EA7;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1B;&lt;strong&gt;window &amp;#x6CA1;&amp;#x6709;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x5C42;&amp;#x6B21;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;13&amp;#x8FDB;&amp;#x7A0B;&amp;#x72B6;&amp;#x6001;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13&amp;#x8FDB;&amp;#x7A0B;&amp;#x72B6;&amp;#x6001;&#34;&gt;#&lt;/a&gt; 1.3&lt;strong&gt; &amp;#x8FDB;&amp;#x7A0B;&amp;#x72B6;&amp;#x6001;&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Running&lt;/li&gt;
&lt;li&gt;Ready&lt;/li&gt;
&lt;li&gt;Blocked&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x72B6;&amp;#x6001;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x76F8;&amp;#x4E92;&amp;#x8F6C;&amp;#x6362;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;Process blocks for input &amp;#xFF1A;running -&amp;gt; blocked&lt;br&gt;
Scheduler picks another process: running -&amp;gt; ready&lt;br&gt;
Scheduler picks this process: ready -&amp;gt; running&lt;br&gt;
Input becomes available: blocked -&amp;gt; running&lt;/p&gt;
&lt;h3 id=&#34;14&amp;#x8FDB;&amp;#x7A0B;&amp;#x5B9E;&amp;#x73B0;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14&amp;#x8FDB;&amp;#x7A0B;&amp;#x5B9E;&amp;#x73B0;&#34;&gt;#&lt;/a&gt; 1.4&lt;strong&gt; &amp;#x8FDB;&amp;#x7A0B;&amp;#x5B9E;&amp;#x73B0;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&amp;#x5148;&amp;#x8003;&amp;#x8651;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7531;&amp;#x4EC0;&amp;#x4E48;&amp;#x7EC4;&amp;#x6210;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User program&lt;/li&gt;
&lt;li&gt;User data&lt;/li&gt;
&lt;li&gt;stack &amp;#x53D8;&amp;#x91CF;&amp;#x50A8;&amp;#x5B58;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&lt;/li&gt;
&lt;li&gt;PCB&lt;/li&gt;
&lt;li&gt;Process Context
&lt;ul&gt;
&lt;li&gt;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x6267;&amp;#x884C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x6700;&amp;#x57FA;&amp;#x672C;&amp;#x7684;&amp;#x63CF;&amp;#x8FF0;&lt;/li&gt;
&lt;li&gt;&amp;#x5206;&amp;#x4E3A;&amp;#xFF1A;User Context&amp;#x3001;Register Context&amp;#x3001;System Context&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Context Switch &amp;#xFF08;CPU &amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8C03;&amp;#x5EA6;&amp;#xFF09;
&lt;ul&gt;
&lt;li&gt;&amp;#x7531;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684; schedule &amp;#x6765;&amp;#x6267;&amp;#x884C;&lt;/li&gt;
&lt;li&gt;&amp;#x4FDD;&amp;#x5B58;&amp;#x65E7;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684; pcb&amp;#xFF0C;&amp;#x52A0;&amp;#x8F7D;&amp;#x65B0;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684; pcb&lt;/li&gt;
&lt;li&gt;&amp;#x5237;&amp;#x65B0; memory cache&lt;/li&gt;
&lt;li&gt;&amp;#x8F6C;&amp;#x6362;&amp;#x865A;&amp;#x62DF;&amp;#x5185;&amp;#x5B58;&amp;#x6620;&amp;#x5C04;&amp;#xFF08;memory mapping&amp;#xFF09;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x5207;&amp;#x6362;&amp;#x662F;&amp;#x975E;&amp;#x5E38; cost &amp;#x7684;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PCB Table
&lt;ul&gt;
&lt;li&gt;OS &amp;#x7EF4;&amp;#x62A4;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8868;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E00;&amp;#x9879;&amp;#x5C31;&amp;#x662F;&amp;#x8BE5;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684; pcb&lt;/li&gt;
&lt;li&gt;PCB table &amp;#x7684;&amp;#x5927;&amp;#x5C0F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8861;&amp;#x91CF;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x6027;&lt;/li&gt;
&lt;li&gt;&amp;#x4E24;&amp;#x79CD;&amp;#x7EC4;&amp;#x7EC7;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;Link&amp;#x3001;Index&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-&amp;#x7EBF;&amp;#x7A0B;-thread&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-&amp;#x7EBF;&amp;#x7A0B;-thread&#34;&gt;#&lt;/a&gt; 2 &amp;#x7EBF;&amp;#x7A0B; Thread&lt;/h2&gt;
&lt;h3 id=&#34;21-thread-concept&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-thread-concept&#34;&gt;#&lt;/a&gt; 2.1 Thread concept&lt;/h3&gt;
&lt;p&gt;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x7406;&amp;#x89E3;&amp;#x4E3A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x539F;&amp;#x8FDB;&amp;#x7A0B; PCB &amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x5206;&amp;#x6210;&amp;#x4E24;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;
&lt;ul&gt;
&lt;li&gt;&amp;#x63CF;&amp;#x8FF0;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8D44;&amp;#x6E90;&amp;#x548C;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;&amp;#x63CF;&amp;#x8FF0;&amp;#x6267;&amp;#x884C;&amp;#x73B0;&amp;#x573A;&amp;#x3001;&amp;#x72B6;&amp;#x6001;&amp;#x53CA;&amp;#x8C03;&amp;#x5EA6;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5C06;&amp;#x7B2C;&amp;#x4E8C;&amp;#x90E8;&amp;#x5206;&amp;#x5185;&amp;#x5BB9;&amp;#x4F5C;&amp;#x4E3A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x63A7;&amp;#x5236;&amp;#x5757;&lt;strong&gt; TCB&lt;/strong&gt; &amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x4E14;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5185;&amp;#x5141;&amp;#x8BB8;&amp;#x591A;&amp;#x4E2A;&lt;br&gt;
&amp;#x7EBF;&amp;#x7A0B;&amp;#x5B58;&amp;#x5728;&amp;#x3002;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x65B0;&amp;#x8FDB;&amp;#x7A0B;&amp;#x63CF;&amp;#x8FF0;&amp;#x4E3A;&amp;#xFF1A;
&lt;ul&gt;
&lt;li&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x53EF;&amp;#x88C5;&amp;#x5165;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6620;&amp;#x50CF;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x76F8;&amp;#x5173;&amp;#x8054;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x6587;&amp;#x4EF6;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6240;&amp;#x7528;&amp;#x7684;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8D44;&amp;#x6E90;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#xFF08;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x65F6;&amp;#x4E00;&amp;#x822C;&amp;#x540C;&amp;#x65F6;&amp;#x521B;&amp;#x5EFA;&amp;#x597D;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&lt;br&gt;
&amp;#x5176;&amp;#x4ED6;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6309;&amp;#x9700;&amp;#x8981;&amp;#x7531;&amp;#x7528;&amp;#x6237;&amp;#x7A0B;&amp;#x5E8F;&amp;#x8BF7;&amp;#x6C42;&amp;#x521B;&amp;#x5EFA;&amp;#xFF09;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0D;&amp;#x62E5;&amp;#x6709;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0E;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#xFF0C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x4FDD;&amp;#x8BC1;&amp;#x5176;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1A;TCB&amp;#xFF0C;pc&amp;#xFF0C;a register set and a stack&amp;#xFF0C;&amp;#x5B83;&amp;#x4E0E;&amp;#x8BE5;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x5176;&amp;#x4ED6;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5171;&amp;#x4EAB;&amp;#x8BE5;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E2D;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&lt;/p&gt;
&lt;h3 id=&#34;22-&amp;#x91CD;&amp;#x70B9;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x533A;&amp;#x522B;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-&amp;#x91CD;&amp;#x70B9;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x533A;&amp;#x522B;&#34;&gt;#&lt;/a&gt; 2.2 &amp;#x91CD;&amp;#x70B9;&amp;#xFF1A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x533A;&amp;#x522B;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x662F;&amp;#x8D44;&amp;#x6E90;&amp;#x5206;&amp;#x914D;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x5355;&amp;#x4F4D;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x4E0E;&amp;#x8BE5;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6709;&amp;#x5173;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x5206;&lt;br&gt;
&amp;#x914D;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x5982;&amp;#x6253;&amp;#x5370;&amp;#x673A;&amp;#x3001;I/O &amp;#x7F13;&amp;#x51B2;&amp;#x961F;&amp;#x5217;&amp;#x7B49;&amp;#xFF0C;&amp;#x5747;&amp;#x8BB0;&amp;#x5F55;&amp;#x5728;&amp;#x8FDB;&amp;#x7A0B;&amp;#x63A7;&amp;#x5236;&amp;#x5757;&lt;br&gt;
 PCB &amp;#x4E2D;&amp;#xFF0C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E5F;&amp;#x662F;&amp;#x5206;&amp;#x914D;&amp;#x4E3B;&amp;#x5B58;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x5355;&amp;#x4F4D;&amp;#xFF0C;&amp;#x5B83;&amp;#x62E5;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8C;&amp;#x6574;&lt;br&gt;
&amp;#x7684;&amp;#x865A;&amp;#x62DF;&amp;#x5730;&amp;#x5740;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x800C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0E;&amp;#x8D44;&amp;#x6E90;&amp;#x5206;&amp;#x914D;&amp;#x65E0;&amp;#x5173;&amp;#xFF0C;&amp;#x5B83;&amp;#x5C5E;&amp;#x4E8E;&amp;#x67D0;&amp;#x4E00;&amp;#x4E2A;&lt;br&gt;
&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0E;&amp;#x8BE5;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5185;&amp;#x7684;&amp;#x5176;&amp;#x5B83;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E00;&amp;#x8D77;&amp;#x5171;&amp;#x4EAB;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x62E5;&amp;#x6709;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x865A;&amp;#x62DF;&amp;#x5730;&amp;#x5740;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x800C;&amp;#x540C;&amp;#x4E00;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E2D;&amp;#x7684;&amp;#x591A;&lt;br&gt;
&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5171;&amp;#x4EAB;&amp;#x540C;&amp;#x4E00;&amp;#x5730;&amp;#x5740;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8C03;&amp;#x5EA6;&amp;#x7684;&amp;#x5207;&amp;#x6362;&amp;#x5C06;&amp;#x6D89;&amp;#x53CA;&amp;#x5230;&amp;#x6709;&amp;#x5173;&amp;#x8D44;&amp;#x6E90;&amp;#x6307;&amp;#x9488;&amp;#x7684;&amp;#x4FDD;&amp;#x5B58;&amp;#x53CA;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5730;&amp;#x5740;&lt;br&gt;
&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x7B49;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x800C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x5207;&amp;#x6362;&amp;#x5C06;&amp;#x4E0D;&amp;#x6D89;&amp;#x53CA;&amp;#x8D44;&amp;#x6E90;&amp;#x6307;&amp;#x9488;&amp;#x7684;&amp;#x4FDD;&lt;br&gt;
&amp;#x5B58;&amp;#x548C;&amp;#x5730;&amp;#x5740;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x53D8;&amp;#x5316;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#xFF0C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x7684;&amp;#x5F00;&amp;#x9500;&amp;#x8981;&amp;#x6BD4;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5207;&lt;br&gt;
&amp;#x6362;&amp;#x7684;&amp;#x5F00;&amp;#x9500;&amp;#x5C0F;&amp;#x5F97;&amp;#x591A;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x8C03;&amp;#x5EA6;&amp;#x4E0E;&amp;#x5207;&amp;#x6362;&amp;#x90FD;&amp;#x662F;&amp;#x7531;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5185;&amp;#x6838;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x800C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5219;&lt;br&gt;
&amp;#x65E2;&amp;#x53EF;&amp;#x7531;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5185;&amp;#x6838;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x7531;&amp;#x7528;&amp;#x6237;&amp;#x7A0B;&amp;#x5E8F;&amp;#x8FDB;&amp;#x884C;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x52A8;&amp;#x6001;&amp;#x521B;&amp;#x5EFA;&amp;#x8FDB;&amp;#x7A0B;&amp;#x3002;&amp;#x88AB;&amp;#x8FDB;&amp;#x7A0B;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x521B;&amp;#x5EFA;&lt;br&gt;
&amp;#x5176;&amp;#x5B83;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6709;&amp;#x521B;&amp;#x5EFA;&amp;#x3001;&amp;#x6267;&amp;#x884C;&amp;#x3001;&amp;#x6D88;&amp;#x4EA1;&amp;#x7684;&amp;#x751F;&amp;#x547D;&amp;#x5468;&amp;#x671F;&amp;#x3002;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E5F;&amp;#x6709;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&lt;br&gt;
&amp;#x751F;&amp;#x547D;&amp;#x5468;&amp;#x671F;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;23-thread-advantage&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-thread-advantage&#34;&gt;#&lt;/a&gt; 2.3 Thread Advantage&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x521B;&amp;#x9020;&amp;#xFF0C;&amp;#x5207;&amp;#x6362;&amp;#xFF0C;&amp;#x7ED3;&amp;#x675F;&amp;#x7684;&amp;#x5F00;&amp;#x9500;&amp;#x5C0F;&lt;/li&gt;
&lt;li&gt;&amp;#x7EBF;&amp;#x7A0B;&amp;#x901A;&amp;#x4FE1;&amp;#x975E;&amp;#x5E38;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5171;&amp;#x4EAB;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x516C;&amp;#x7528;&amp;#x4E00;&amp;#x5757;&amp;#x865A;&amp;#x62DF;&amp;#x5185;&amp;#x5B58;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;24-thread-usage&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24-thread-usage&#34;&gt;#&lt;/a&gt; 2.4 Thread Usage&lt;/h3&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x8981;&amp;#x4F7F;&amp;#x7528; thread &amp;#x5462;&amp;#xFF1F;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x54CD;&amp;#x5E94;&amp;#x6027;&amp;#xFF1A;&amp;#x591A;&amp;#x4E2A;&amp;#x6D3B;&amp;#x52A8;&amp;#x540C;&amp;#x65F6;&amp;#x8FDB;&amp;#x884C;&lt;/li&gt;
&lt;li&gt;&amp;#x8D44;&amp;#x6E90;&amp;#x5171;&amp;#x4EAB;&lt;/li&gt;
&lt;li&gt;&amp;#x5F00;&amp;#x9500;&amp;#x5C0F;&amp;#xFF1A;&amp;#x521B;&amp;#x9020;&amp;#x548C;&amp;#x9500;&amp;#x6BC1;&amp;#x7684;&amp;#x5F00;&amp;#x9500;&amp;#x5C0F;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;&amp;#x591A;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x975E;&amp;#x5E38;&amp;#x597D;&amp;#x7528;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;25-thread&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#25-thread&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&#34;&gt;#&lt;/a&gt; 2.5 Thread &amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&lt;/h3&gt;
&lt;p&gt;&amp;#x4E09;&amp;#x79CD;&amp;#x67B6;&amp;#x6784;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7528;&amp;#x6237;&amp;#x7A7A;&amp;#x95F4;&lt;/li&gt;
&lt;li&gt;&amp;#x5185;&amp;#x6838;&amp;#x7A7A;&amp;#x95F4;&lt;/li&gt;
&lt;li&gt;&amp;#x4E24;&amp;#x8005;&amp;#x6DF7;&amp;#x5408;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;251-user-threads&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#251-user-threads&#34;&gt;#&lt;/a&gt; 2.5.1 User Threads&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6253;&amp;#x5305;&amp;#x5728;&amp;#x7528;&amp;#x6237;&amp;#x6001;&amp;#xFF0C;&amp;#x5185;&amp;#x6838;&amp;#x5B8C;&amp;#x5168;&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x7EBF;&amp;#x7A0B;&lt;/li&gt;
&lt;li&gt;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x5185;&amp;#x6838;&amp;#x7684;&amp;#x6743;&amp;#x9650;&amp;#xFF0C;&amp;#x5207;&amp;#x6362;&amp;#x5F00;&amp;#x9500;&amp;#x5C0F;&amp;#x4E14;&amp;#x5FEB;&amp;#x901F;&lt;/li&gt;
&lt;li&gt;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x5982;&amp;#x679C;&amp;#x5185;&amp;#x6838;&amp;#x662F;&amp;#x5355;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#xFF0C;&amp;#x4EFB;&amp;#x4F55;&amp;#x7528;&amp;#x6237;&amp;#x6001;&amp;#x7EBF;&amp;#x7A0B;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;&amp;#x4E00;&amp;#x8C03;&amp;#x6B63;&amp;#x5728;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x5BFC;&amp;#x81F4;&amp;#x6574;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8FDB;&amp;#x5165;&amp;#x963B;&amp;#x585E;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x963B;&amp;#x585E;&amp;#x4F1A;&amp;#x5BFC;&amp;#x81F4;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x963B;&amp;#x585E;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;252-kernel-threads&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#252-kernel-threads&#34;&gt;#&lt;/a&gt; 2.5.2 Kernel Threads&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5185;&amp;#x6838;&amp;#x8D1F;&amp;#x8D23;&amp;#x7BA1;&amp;#x7406;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x8D1F;&amp;#x8D23;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x521B;&amp;#x9020;&amp;#x3001;&amp;#x8C03;&amp;#x5EA6;&amp;#x3001;&amp;#x9500;&amp;#x6BC1;&lt;/li&gt;
&lt;li&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5E93;&amp;#xFF0C;&amp;#x5185;&amp;#x6838;&amp;#x63D0;&amp;#x4F9B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x76F8;&amp;#x5173;&amp;#x7684; api&lt;/li&gt;
&lt;li&gt;&amp;#x5185;&amp;#x6838;&amp;#x4FDD;&amp;#x6301;&amp;#x7740;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684; context&lt;/li&gt;
&lt;li&gt;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x9700;&amp;#x8981;&amp;#x5185;&amp;#x6838;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7EBF;&amp;#x7A0B;&amp;#x662F;&amp;#x8C03;&amp;#x5EA6;&amp;#x5668;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x5355;&amp;#x4F4D;&amp;#xFF0C;&amp;#x8C03;&amp;#x5EA6;&amp;#x5668;&amp;#x8C03;&amp;#x5EA6;&amp;#x7684;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&lt;/li&gt;
&lt;li&gt;&amp;#x7F3A;&amp;#x70B9;&amp;#x662F; high cost&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-&amp;#x8003;&amp;#x8BD5;&amp;#x91CD;&amp;#x70B9;&amp;#x8FDB;&amp;#x7A0B;&amp;#x901A;&amp;#x4FE1;ipc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-&amp;#x8003;&amp;#x8BD5;&amp;#x91CD;&amp;#x70B9;&amp;#x8FDB;&amp;#x7A0B;&amp;#x901A;&amp;#x4FE1;ipc&#34;&gt;#&lt;/a&gt; 3 &amp;#x8003;&amp;#x8BD5;&amp;#x91CD;&amp;#x70B9;&amp;#xFF1A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x901A;&amp;#x4FE1;&amp;#xFF08;IPC&amp;#xFF09;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x91CD;&amp;#x70B9;&amp;#x8BA8;&amp;#x8BBA;&amp;#x4EE5;&amp;#x4E0B; issue&amp;#xFF1A;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x95F4;&amp;#x5982;&amp;#x4F55;&amp;#x4F20;&amp;#x9012;&amp;#x4FE1;&amp;#x606F;&lt;/li&gt;
&lt;li&gt;&amp;#x8D44;&amp;#x6E90;&amp;#x5171;&amp;#x4EAB;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x540C;&amp;#x6B65;&amp;#xFF08;process synchronization&amp;#xFF09;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8D44;&amp;#x6E90;&amp;#x5171;&amp;#x4EAB;&amp;#x4E2D;&amp;#x5B58;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x8BA4;&amp;#x8BC6;&amp;#xFF1A;&amp;#x7ADE;&amp;#x4E89;&amp;#xFF08;Race&amp;#xFF09;&lt;/p&gt;
&lt;p&gt;&amp;#x5B58;&amp;#x5728;&amp;#x7ADE;&amp;#x4E89;&amp;#x7684;&amp;#x6761;&amp;#x4EF6;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;#x591A;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x7684; data&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#x591A;&amp;#x6B65;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;#x907F;&amp;#x514D;&amp;#x7ADE;&amp;#x4E89;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x907F;&amp;#x514D;&amp;#x591A;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5BF9;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x7684; data &amp;#x540C;&amp;#x65F6;&amp;#x8FDB;&amp;#x884C;&amp;#x8BFB;&amp;#x5199;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;#x4E34;&amp;#x754C;&amp;#x8D44;&amp;#x6E90; Critical Resource&amp;#xFF1A;&amp;#x4E00;&amp;#x6B21;&amp;#x53EA;&amp;#x5141;&amp;#x8BB8;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8BBF;&amp;#x95EE;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;#x4E34;&amp;#x754C;&amp;#x533A; Critical Region&amp;#xFF1A;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E34;&amp;#x754C;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6BB5;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;31-&amp;#x4E92;&amp;#x65A5;&amp;#x8BBF;&amp;#x95EE;&amp;#x8D44;&amp;#x6E90;-mutual-exclusion&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-&amp;#x4E92;&amp;#x65A5;&amp;#x8BBF;&amp;#x95EE;&amp;#x8D44;&amp;#x6E90;-mutual-exclusion&#34;&gt;#&lt;/a&gt; 3.1 &amp;#x4E92;&amp;#x65A5;&amp;#x8BBF;&amp;#x95EE;&amp;#x8D44;&amp;#x6E90; Mutual Exclusion&lt;/h3&gt;
&lt;p&gt;&amp;#x9020;&amp;#x6210;&amp;#x4E92;&amp;#x65A5;&amp;#x6392;&amp;#x65A5;&amp;#x7684;&amp;#x56DB;&amp;#x4E2A;&amp;#x6761;&amp;#x4EF6;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x540C;&amp;#x65F6;&amp;#x5B58;&amp;#x5728;&amp;#x5728;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#xFF08;&amp;#x4E92;&amp;#x65A5;&amp;#xFF09;&lt;/li&gt;
&lt;li&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x5BF9; CPU &amp;#x7684;&amp;#x901F;&amp;#x5EA6;&amp;#x548C;&amp;#x6570;&amp;#x91CF;&amp;#x8FDB;&amp;#x884C;&amp;#x5047;&amp;#x8BBE;&lt;/li&gt;
&lt;li&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x5728;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x5916;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x9501;&amp;#x4F4F;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF08;&amp;#x975E;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&amp;#xFF09;&lt;/li&gt;
&lt;li&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5FC5;&amp;#x987B;&amp;#x6C38;&amp;#x8FDC;&amp;#x7684;&amp;#x7B49;&amp;#x5F85;&amp;#x8FDB;&amp;#x5165;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x8D44;&amp;#x6E90;&amp;#x4E92;&amp;#x65A5;&amp;#x6392;&amp;#x65A5;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x80FD;&amp;#x591F;&amp;#x8BA9;&amp;#x591A;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x540C;&amp;#x65F6;&amp;#x5728;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x8FD0;&amp;#x884C;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x7981;&amp;#x7528;&amp;#x4E2D;&amp;#x65AD;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x5165;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x540E;&amp;#xFF0C;&amp;#x7981;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x4E2D;&amp;#x65AD;&amp;#x76F4;&amp;#x5230;&amp;#x8FDB;&amp;#x7A0B;&amp;#x79BB;&amp;#x5F00;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&lt;/li&gt;
&lt;li&gt;&amp;#x65F6;&amp;#x949F;&amp;#x4E2D;&amp;#x65AD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x53D1;&amp;#x751F;&amp;#x65F6;&amp;#xFF0C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x4E0D;&amp;#x4F1A;&amp;#x53D1;&amp;#x751F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x5728;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5B8C;&amp;#x6210;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x8BBF;&amp;#x95EE;&amp;#x524D;&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x88AB;&amp;#x6253;&amp;#x65AD;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7981;&amp;#x7528;&amp;#x4E2D;&amp;#x65AD;&amp;#x540E;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x90FD;&amp;#x4F1A;&amp;#x6309;&amp;#x7167;&amp;#x987A;&amp;#x5E8F;&amp;#x8FD0;&amp;#x884C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x7684; data &amp;#x5C31;&amp;#x80FD;&amp;#x88AB;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x4FEE;&amp;#x6539;&amp;#x8BBF;&amp;#x95EE;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x53EA;&amp;#x4F1A;&amp;#x5728; OS &amp;#x7CFB;&amp;#x7EDF;&amp;#x5185;&amp;#x4F7F;&amp;#x7528;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x9501;&amp;#x53D8;&amp;#x91CF;&amp;#x1F512;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5E38;&amp;#x89C1;&amp;#x7684;&amp;#x6709;&amp;#x4E92;&amp;#x65A5;&amp;#x9501; Mutux Lock&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strict Alternation &amp;#x4E25;&amp;#x683C;&amp;#x53D8;&amp;#x66F4;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Peterson&amp;apos;s&lt;/strong&gt;&lt;br&gt;
 &amp;#x4F7F;&amp;#x7528; turn &amp;#x548C; interested [i]&amp;#xFF0C;&amp;#x5F53;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6253;&amp;#x7B97;&amp;#x8FDB;&amp;#x5165;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F1A;&amp;#x68C0;&amp;#x67E5;&amp;#x5F53;&amp;#x524D; turn &amp;#x662F;&amp;#x4E0D;&amp;#x662F;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x662F;&amp;#x5426;&amp;#x5BF9;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x611F;&amp;#x5174;&amp;#x8DA3;&amp;#xFF0C;&amp;#x5982;&amp;#x679C; turn &amp;#x4E0D;&amp;#x662F;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x6216;&amp;#x8005;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E0D;&amp;#x611F;&amp;#x5174;&amp;#x8DA3;&amp;#xFF0C;&amp;#x624D;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF1B;&amp;#x5982;&amp;#x679C; turn &amp;#x662F;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x5E76;&amp;#x4E14;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x611F;&amp;#x5174;&amp;#x8DA3;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5361;&amp;#x5728;&amp;#x5FAA;&amp;#x73AF;&amp;#x4E2D;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;turn &amp;#x7684;&amp;#x4F5C;&amp;#x7528;&amp;#xFF1A;&amp;#x9632;&amp;#x6B62;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x540C;&amp;#x65F6;&amp;#x628A; interested &amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A; true&amp;#xFF0C;&amp;#x5BFC;&amp;#x81F4;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5361;&amp;#x5728; while &amp;#x5FAA;&amp;#x73AF;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&amp;#x786C;&amp;#x4EF6;&amp;#x65B9;&amp;#x6CD5; TSL&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;311-mutual-exclusion-with-busy-waiting&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#311-mutual-exclusion-with-busy-waiting&#34;&gt;#&lt;/a&gt; 3.1.1 Mutual Exclusion with Busy Waiting&lt;/h4&gt;
&lt;p&gt;&amp;#x65B9;&amp;#x6CD5;&amp;#x56DB;&amp;#x3001;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E94;&amp;#x9700;&amp;#x8981;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8FDB;&amp;#x884C;&amp;#x5FD9;&amp;#x7B49;&amp;#x5F85;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x5361; while &amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6CA1;&amp;#x6709;&amp;#x8FDB;&amp;#x5165; block &amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4F1A;&amp;#x5BFC;&amp;#x81F4;&amp;#x4E00;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x53CD;&amp;#x8F6C;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x4F4E;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5728; blocking &amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x9AD8;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x89E3;&amp;#x51B3;&amp;#xFF1A;&lt;strong&gt;sleep and wakeup&lt;/strong&gt;&lt;br&gt;
 &amp;#x8BA9;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8FDB;&amp;#x5165; block &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F; busy waiting&amp;#xFF1B;&amp;#x5F53;&amp;#x80FD;&amp;#x591F;&amp;#x8FDB;&amp;#x5165;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x540E;&amp;#x518D;&amp;#x5524;&amp;#x9192; wakeup&lt;/p&gt;
&lt;h3 id=&#34;32-&amp;#x91CD;&amp;#x70B9;&amp;#x6D88;&amp;#x8D39;&amp;#x8005;&amp;#x751F;&amp;#x4EA7;&amp;#x8005;&amp;#x95EE;&amp;#x9898;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-&amp;#x91CD;&amp;#x70B9;&amp;#x6D88;&amp;#x8D39;&amp;#x8005;&amp;#x751F;&amp;#x4EA7;&amp;#x8005;&amp;#x95EE;&amp;#x9898;&#34;&gt;#&lt;/a&gt; 3.2 &amp;#x91CD;&amp;#x70B9;&amp;#xFF1A;&amp;#x6D88;&amp;#x8D39;&amp;#x8005;&amp;#x751F;&amp;#x4EA7;&amp;#x8005;&amp;#x95EE;&amp;#x9898;&lt;/h3&gt;
&lt;h4 id=&#34;321-&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x5FC5;&amp;#x8003;&amp;#x4E2D;&amp;#x7684;&amp;#x5FC5;&amp;#x8003;-semaphores&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#321-&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x5FC5;&amp;#x8003;&amp;#x4E2D;&amp;#x7684;&amp;#x5FC5;&amp;#x8003;-semaphores&#34;&gt;#&lt;/a&gt; 3.2.1 &amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x5FC5;&amp;#x8003;&amp;#x4E2D;&amp;#x7684;&amp;#x5FC5;&amp;#x8003; Semaphores&lt;/h4&gt;
&lt;p&gt;Semaphores = 0&amp;#xFF1A;no wakeups were saved; some value: one or more wakeups were pending&lt;/p&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E24;&amp;#x90E8;&amp;#x5206;&amp;#x7EC4;&amp;#x6210;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an integer counter&amp;#xFF0C;COUNT&lt;/li&gt;
&lt;li&gt;a queue of pids of blocked processes&amp;#xFF0C;Q&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#x5206;&amp;#x4E3A;&amp;#x4E24;&amp;#x79CD;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P () or wait () or down () &amp;#xFF1A;&amp;#x7533;&amp;#x8BF7;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x51CF;&amp;#x5C11;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&lt;/li&gt;
&lt;li&gt;V () or signal () or up () : &amp;#x91CA;&amp;#x653E;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x589E;&amp;#x52A0;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x4E3A;&amp;#x6B63;&amp;#x65F6;&amp;#x8868;&amp;#x793A;&amp;#x5F53;&amp;#x524D;&amp;#x8D44;&amp;#x6E90;&amp;#x53EF;&amp;#x4EE5;&amp;#x88AB;&amp;#x591A;&amp;#x5C11;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF1B;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x4E3A;&amp;#x8D1F;&amp;#x65F6;&amp;#x8868;&amp;#x5F53;&amp;#x524D;&amp;#x6709;&amp;#x591A;&amp;#x5C11;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5728;&amp;#x7B49;&amp;#x5F85;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&#34;322-mutex-&amp;#x4E92;&amp;#x65A5;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#322-mutex-&amp;#x4E92;&amp;#x65A5;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&#34;&gt;#&lt;/a&gt; 3.2.2 Mutex &amp;#x4E92;&amp;#x65A5;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&lt;/h4&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E0D;&amp;#x4F7F;&amp;#x7528; Mutex&amp;#xFF1F;&lt;/p&gt;
&lt;p&gt;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x5927;&amp;#x5C0F;&amp;#x4E3A; 1&amp;#xFF0C;&amp;#x4EFB;&amp;#x4F55;&amp;#x65F6;&amp;#x523B;&amp;#xFF0C;apple&amp;#x3001;orange &amp;#x548C; plate &amp;#x4E09;&amp;#x4E2A;&amp;#x540C;&amp;#x6B65;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x4E2D;&amp;#x6700;&amp;#x591A;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x662F; 1 &amp;#x3002;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x5728;&amp;#x4EFB;&amp;#x4F55;&amp;#x65F6;&amp;#x523B;&amp;#xFF0C;&amp;#x6700;&amp;#x591A;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x96C6;&amp;#x6210;&amp;#x7684; P &amp;#x64CD;&amp;#x4F5C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x88AB;&amp;#x963B;&amp;#x585E;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x5927;&amp;#x5C0F;&amp;#x5927;&amp;#x4E8E; 1&amp;#xFF08;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x5141;&amp;#x8BB8;&amp;#x7684;&amp;#x503C;&amp;#x5927;&amp;#x4E8E; 1&amp;#xFF09;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&lt;br&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;P(plate);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;P(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x5BF9;plate&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x4E2D;&amp;#x7684;&amp;#x4E8B;&amp;#x7269;&amp;#x8FDB;&amp;#x884C;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF1B;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;V(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;V(plate);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Semaphores &amp;#x5927;&amp;#x4E8E; 1 &amp;#x65F6;&amp;#xFF0C;&amp;#x5C31;&amp;#x5FC5;&amp;#x987B;&amp;#x8BBE;&amp;#x5B9A;&amp;#x4E00;&amp;#x4E2A; mutex &amp;#x6765;&amp;#x4FDD;&amp;#x8BC1;&amp;#x4E92;&amp;#x65A5;&amp;#x8BBF;&amp;#x95EE;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PV &amp;#x64CD;&amp;#x4F5C;&amp;#x9898;&amp;#x7684;&amp;#x89E3;&amp;#x9898;&amp;#x601D;&amp;#x8DEF;&amp;#xFF1A;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5173;&amp;#x7CFB;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&amp;#x627E;&amp;#x51FA;&amp;#x9898;&amp;#x76EE;&amp;#x4E2D;&amp;#x63CF;&amp;#x8FF0;&amp;#x7684;&amp;#x5404;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF1B;&amp;#x5206;&amp;#x6790;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x540C;&amp;#x6B65;&amp;#x3001;&amp;#x4E92;&amp;#x65A5;&amp;#x5173;&amp;#x7CFB;&amp;#x3002;&amp;#x627E;&amp;#x5230;&amp;#x4E0D;&amp;#x80FD;&amp;#x540C;&amp;#x65F6;&amp;#x53D1;&amp;#x751F;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x5C31;&amp;#x662F;&amp;#x4E34;&amp;#x754C;&amp;#x533A;&amp;#x3002;&amp;#x4E0D;&amp;#x80FD;&amp;#x540C;&amp;#x65F6;&amp;#x53D1;&amp;#x751F;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x53EF;&amp;#x80FD;&amp;#x6709;&amp;#x591A;&amp;#x4E2A;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#xFF1A;&amp;#x4E92;&amp;#x65A5;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x521D;&amp;#x59CB;&amp;#x503C;&amp;#x4E3A; 1&amp;#xFF0C;&amp;#x540C;&amp;#x6B65;&amp;#x4FE1;&amp;#x53F7;&amp;#x91CF;&amp;#x521D;&amp;#x503C;&amp;#x8981;&amp;#x770B;&amp;#x5BF9;&amp;#x5E94;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x503C;&amp;#x662F;&amp;#x591A;&amp;#x5C11;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;issue&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P&amp;#xFF08;S&amp;#xFF09;&amp;#x8868;&amp;#x793A;&amp;#x7533;&amp;#x8BF7;&amp;#x8D44;&amp;#x6E90;&amp;#xFF1B;V&amp;#xFF08;S&amp;#xFF09;&amp;#x8868;&amp;#x793A;&amp;#x91CA;&amp;#x653E;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x773C;&lt;/li&gt;
&lt;li&gt;P&amp;#x3001;V &amp;#x64CD;&amp;#x4F5C;&amp;#x5FC5;&amp;#x987B;&amp;#x6210;&amp;#x5BF9;&amp;#x51FA;&amp;#x73B0;&amp;#xFF0C;&amp;#x7533;&amp;#x8BF7;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x672A;&amp;#x6765;&amp;#x4E00;&amp;#x5B9A;&amp;#x4F1A;&amp;#x91CA;&amp;#x653E;&amp;#x3002;&amp;#x5F53;&amp;#x4E3A;&amp;#x4E92;&amp;#x65A5;&amp;#x64CD;&amp;#x4F5C;&amp;#x65F6;&amp;#xFF0C;&amp;#x51FA;&amp;#x73B0;&amp;#x5728;&amp;#x540C;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF1B;&amp;#x5F53;&amp;#x4E3A;&amp;#x540C;&amp;#x6B65;&amp;#x64CD;&amp;#x4F5C;&amp;#x65F6;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5728;&amp;#x540C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x51FA;&amp;#x73B0;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x4E2A;&amp;#x540C;&amp;#x6B65; P &amp;#x548C;&amp;#x4E92;&amp;#x65A5; P &amp;#x64CD;&amp;#x4F5C;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;&amp;#x65F6;&amp;#xFF0C;&amp;#x540C;&amp;#x6B65; P &amp;#x5728;&amp;#x4E92;&amp;#x65A5; P &amp;#x524D;&amp;#x9762;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-monitors&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-monitors&#34;&gt;#&lt;/a&gt; 4 Monitors&lt;/h3&gt;
&lt;p&gt;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3001;&amp;#x53D8;&amp;#x91CF;&amp;#x548C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A; package &amp;#x7684;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7406;&amp;#x89E3;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EA;&amp;#x80FD;&amp;#x88AB;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8BBF;&amp;#x95EE;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5757;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BBF;&amp;#x95EE; Monitor &amp;#x7684;&amp;#x89C4;&amp;#x5219;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x8C03;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x8BBF;&amp;#x95EE; Monitor&lt;/li&gt;
&lt;li&gt;&amp;#x4E92;&amp;#x65A5;&amp;#x8BBF;&amp;#x95EE; Monitor&lt;/li&gt;
&lt;li&gt;&amp;#x4E0D;&amp;#x80FD;&amp;#x76F4;&amp;#x63A5;&amp;#x8BBF;&amp;#x95EE; Monitor &amp;#x7684;&amp;#x53D8;&amp;#x91CF;&lt;/li&gt;
&lt;li&gt;Monitor &amp;#x53EF;&amp;#x4EE5;&amp;#x53EA;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBF;&amp;#x95EE;&amp;#x5B83;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;monitor &amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FDB;&amp;#x7A0B;&amp;#x540C;&amp;#x6B65;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528; condition &amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528; wait&amp;#xFF08;x&amp;#xFF09;&amp;#x6765;&amp;#x7B49;&amp;#x5F85;&amp;#x6709;&amp;#x4EBA;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86; condition &amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x4F1A;&amp;#x662F; condition+1&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528; signal&amp;#xFF08;x&amp;#xFF09;&amp;#x6765;&amp;#x4F7F;&amp;#x7528; condition &amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x4F1A;&amp;#x4F7F; condition-1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528; monitor &amp;#x89E3;&amp;#x51B3;&amp;#x751F;&amp;#x4EA7;&amp;#x8005;&amp;#x6D88;&amp;#x8D39;&amp;#x8005;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528; count&amp;#xFF0C;&amp;#x4E00;&amp;#x822C;&amp;#x8868;&amp;#x793A;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x7684;&amp;#x6570;&amp;#x76EE;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x5F53; count=1 &amp;#x65F6;&amp;#xFF0C;&amp;#x5C31;&amp;#x8981; signal&amp;#xFF08;empty&amp;#xFF09;&amp;#xFF0C;&amp;#x53D1;&amp;#x51FA;&amp;#x7A7A;&amp;#x4FE1;&amp;#x53F7;&amp;#xFF0C;&amp;#x8BF4;&amp;#x660E;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4E0D;&amp;#x7A7A;&amp;#x4E86;&amp;#xFF0C;&amp;#x8BA9; wait empty &amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5F97;&amp;#x4EE5;&amp;#x8BBF;&amp;#x95EE; count &amp;#x4E86;&amp;#xFF1B;&amp;#x5F53; count=N-1 &amp;#x65F6;&amp;#xFF0C;&amp;#x5C31;&amp;#x8981; signal&amp;#xFF08;full&amp;#xFF09;&amp;#xFF0C;&amp;#x53D1;&amp;#x51FA;&amp;#x6EE1;&amp;#x4FE1;&amp;#x53F7;&amp;#xFF0C;&amp;#x8BF4;&amp;#x660E;&amp;#x73B0;&amp;#x5728; count &amp;#x5DF2;&amp;#x7ECF;&amp;#x4E0D;&amp;#x6EE1;&amp;#x4E86;&amp;#x3002;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-message-passing&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-message-passing&#34;&gt;#&lt;/a&gt; 5 Message passing&lt;/h3&gt;
&lt;p&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x901A;&amp;#x4FE1;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5171;&amp;#x4EAB; memory&lt;/li&gt;
&lt;li&gt;&amp;#x5171;&amp;#x4EAB; file mode&lt;/li&gt;
&lt;li&gt;Message passing&amp;#xFF1A;
&lt;ul&gt;
&lt;li&gt;send and Receive&lt;/li&gt;
&lt;li&gt;send&amp;#xFF08;addr&amp;#xFF0C;msg&amp;#xFF09;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;recv&amp;#xFF08;addr&amp;#xFF0C;msg&amp;#xFF09;&amp;#xFF1B;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-barrier&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-barrier&#34;&gt;#&lt;/a&gt; 6 Barrier&lt;/h3&gt;
&lt;p&gt;Barrier &amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4EEC;&amp;#x9760;&amp;#x8FD1; Barrier&lt;/li&gt;
&lt;li&gt;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5230;&amp;#x8FBE;&amp;#x662F;&amp;#x624D;&amp;#x5141;&amp;#x8BB8;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x901A;&amp;#x8FC7; Barrier&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-&amp;#x5176;&amp;#x4ED6;&amp;#x7684;ipc&amp;#x95EE;&amp;#x9898;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-&amp;#x5176;&amp;#x4ED6;&amp;#x7684;ipc&amp;#x95EE;&amp;#x9898;&#34;&gt;#&lt;/a&gt; 7 &amp;#x5176;&amp;#x4ED6;&amp;#x7684; IPC &amp;#x95EE;&amp;#x9898;&lt;/h3&gt;
&lt;h4 id=&#34;71-dining-philosophers&amp;#x95EE;&amp;#x9898;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#71-dining-philosophers&amp;#x95EE;&amp;#x9898;&#34;&gt;#&lt;/a&gt; 7.1 Dining Philosophers &amp;#x95EE;&amp;#x9898;&lt;/h4&gt;
&lt;h4 id=&#34;72-reader-and-writer-&amp;#x95EE;&amp;#x9898;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#72-reader-and-writer-&amp;#x95EE;&amp;#x9898;&#34;&gt;#&lt;/a&gt; 7.2 Reader And Writer &amp;#x95EE;&amp;#x9898;&lt;/h4&gt;
&lt;h3 id=&#34;8-&amp;#x8C03;&amp;#x5EA6;&amp;#x95EE;&amp;#x9898;-scheduling&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-&amp;#x8C03;&amp;#x5EA6;&amp;#x95EE;&amp;#x9898;-scheduling&#34;&gt;#&lt;/a&gt; 8 &amp;#x8C03;&amp;#x5EA6;&amp;#x95EE;&amp;#x9898; scheduling&lt;/h3&gt;
&lt;h4 id=&#34;81&amp;#x4F55;&amp;#x65F6;&amp;#x8C03;&amp;#x5EA6;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#81&amp;#x4F55;&amp;#x65F6;&amp;#x8C03;&amp;#x5EA6;&#34;&gt;#&lt;/a&gt; 8.1 &amp;#x4F55;&amp;#x65F6;&amp;#x8C03;&amp;#x5EA6;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x65B0;&amp;#x8FDB;&amp;#x7A0B;&amp;#x88AB;&amp;#x521B;&amp;#x5EFA;&lt;/li&gt;
&lt;li&gt;&amp;#x5B58;&amp;#x5728;&amp;#x8FD0;&amp;#x884C;&amp;#x8FDB;&amp;#x7A0B;&lt;/li&gt;
&lt;li&gt;&amp;#x8FD0;&amp;#x884C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x88AB; block&lt;/li&gt;
&lt;li&gt;io &amp;#x4E2D;&amp;#x65AD;&lt;/li&gt;
&lt;li&gt;&amp;#x65F6;&amp;#x949F;&amp;#x4E2D;&amp;#x65AD;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&amp;#x548C;&amp;#x975E;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&amp;#x8C03;&amp;#x5EA6;&lt;/p&gt;
&lt;p&gt;&amp;#x597D;&amp;#x7684;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&amp;#x7684;&amp;#x5224;&amp;#x65AD;&amp;#x6807;&amp;#x51C6;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fair&lt;/li&gt;
&lt;li&gt;Priority&lt;/li&gt;
&lt;li&gt;Efficiency&lt;/li&gt;
&lt;li&gt;Encourage good behavior&lt;/li&gt;
&lt;li&gt;Support heavy loads&lt;/li&gt;
&lt;li&gt;Adapt to different environments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x4FA7;&amp;#x91CD;&amp;#x70B9;&amp;#x4E0D;&amp;#x540C;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All Systems
&lt;ul&gt;
&lt;li&gt;Fairness&lt;/li&gt;
&lt;li&gt;Efficiency&lt;/li&gt;
&lt;li&gt;Policy Enforcement&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Batch
&lt;ul&gt;
&lt;li&gt;Throughput&lt;/li&gt;
&lt;li&gt;Turnaround Time&lt;/li&gt;
&lt;li&gt;Waiting Time&lt;/li&gt;
&lt;li&gt;Processor Utilization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interactive system
&lt;ul&gt;
&lt;li&gt;Response Time&lt;/li&gt;
&lt;li&gt;Proportionality&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Real-Time system
&lt;ul&gt;
&lt;li&gt;meeting deadlines&lt;/li&gt;
&lt;li&gt;predictability&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;82-&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#82-&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&#34;&gt;#&lt;/a&gt; 8.2 &amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&lt;/h4&gt;
&lt;h5 id=&#34;821-first-come-first-served&amp;#x7B97;&amp;#x6CD5;-&amp;#x5148;&amp;#x8FDB;&amp;#x5148;&amp;#x51FA;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#821-first-come-first-served&amp;#x7B97;&amp;#x6CD5;-&amp;#x5148;&amp;#x8FDB;&amp;#x5148;&amp;#x51FA;&#34;&gt;#&lt;/a&gt; 8.2.1 First Come First Served &amp;#x7B97;&amp;#x6CD5; &amp;#x5148;&amp;#x8FDB;&amp;#x5148;&amp;#x51FA;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x975E;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;&amp;#x5728; Batch System &amp;#x4E2D;&amp;#x4F7F;&amp;#x7528;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x7B80;&amp;#x5355;&amp;#x4E0D;&amp;#x8FC7;&amp;#x591A;&amp;#x63CF;&amp;#x8FF0;&lt;/p&gt;
&lt;p&gt;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;convoy &amp;#x95EE;&amp;#x9898;&lt;/p&gt;
&lt;h5 id=&#34;822-shortest-job-first-&amp;#x6700;&amp;#x77ED;&amp;#x4F5C;&amp;#x4E1A;&amp;#x4F18;&amp;#x5148;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#822-shortest-job-first-&amp;#x6700;&amp;#x77ED;&amp;#x4F5C;&amp;#x4E1A;&amp;#x4F18;&amp;#x5148;&#34;&gt;#&lt;/a&gt; 8.2.2 Shortest Job First &amp;#x6700;&amp;#x77ED;&amp;#x4F5C;&amp;#x4E1A;&amp;#x4F18;&amp;#x5148;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x6709;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&amp;#x548C;&amp;#x975E;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&amp;#x7684;&lt;/li&gt;
&lt;li&gt;&amp;#x9700;&amp;#x8981;&amp;#x63D0;&amp;#x524D;&amp;#x77E5;&amp;#x9053;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5B8C;&amp;#x6210;&amp;#x6240;&amp;#x9700;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x5F88;&amp;#x56F0;&amp;#x96BE;&amp;#x7684;&lt;/li&gt;
&lt;li&gt;&amp;#x8981;&amp;#x6C42;&amp;#x8FDB;&amp;#x7A0B;&amp;#x540C;&amp;#x65F6;&amp;#x8FDB;&amp;#x5165;&amp;#x5C31;&amp;#x7EEA;&amp;#x6001;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E5F;&amp;#x662F;&amp;#x975E;&amp;#x5E38;&amp;#x56F0;&amp;#x96BE;&amp;#x7684;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F; SJF&lt;/p&gt;
&lt;p&gt;&amp;#x6709;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5230;&amp;#x8FBE;&amp;#x65F6;&amp;#xFF0C;&amp;#x6BD4;&amp;#x8F83;&amp;#x5F53;&amp;#x524D;&amp;#x6267;&amp;#x884C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5269;&amp;#x4F59;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#x548C;&amp;#x5230;&amp;#x8FBE;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&lt;/p&gt;
&lt;h5 id=&#34;823-round-robin-&amp;#x65F6;&amp;#x95F4;&amp;#x7247;&amp;#x8F6E;&amp;#x8F6C;&amp;#x7B97;&amp;#x6CD5;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#823-round-robin-&amp;#x65F6;&amp;#x95F4;&amp;#x7247;&amp;#x8F6E;&amp;#x8F6C;&amp;#x7B97;&amp;#x6CD5;&#34;&gt;#&lt;/a&gt; 8.2.3 Round-robin &amp;#x65F6;&amp;#x95F4;&amp;#x7247;&amp;#x8F6E;&amp;#x8F6C;&amp;#x7B97;&amp;#x6CD5;&lt;/h5&gt;
&lt;p&gt;&amp;#x65F6;&amp;#x95F4;&amp;#x7247;&amp;#x7684;&amp;#x5927;&amp;#x5C0F;&amp;#x7684;&amp;#x9009;&amp;#x62E9;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#xFF0C;&amp;#x4E00;&amp;#x822C;&amp;#x662F; 10 to 100 ms&lt;/p&gt;
&lt;h5 id=&#34;824-&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x8C03;&amp;#x5EA6;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#824-&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x8C03;&amp;#x5EA6;&#34;&gt;#&lt;/a&gt; 8.2.4 &amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x8C03;&amp;#x5EA6;&lt;/h5&gt;
&lt;p&gt;&amp;#x540C;&amp;#x7EA7;&amp;#x522B;&amp;#x662F; FCFS&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;h5 id=&#34;825-multi-queue-scheduling-&amp;#x591A;&amp;#x7EA7;&amp;#x961F;&amp;#x5217;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#825-multi-queue-scheduling-&amp;#x591A;&amp;#x7EA7;&amp;#x961F;&amp;#x5217;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&#34;&gt;#&lt;/a&gt; 8.2.5 Multi-Queue Scheduling &amp;#x591A;&amp;#x7EA7;&amp;#x961F;&amp;#x5217;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&lt;/h5&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EA;&amp;#x80FD;&amp;#x6C38;&amp;#x4E45;&amp;#x6027;&amp;#x8FDB;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x961F;&amp;#x5217;&amp;#x6267;&amp;#x884C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x591A;&amp;#x7EA7;&amp;#x961F;&amp;#x5217;&amp;#xFF1A;&amp;#x8BE5;&amp;#x7B97;&amp;#x6CD5;&amp;#x5C06;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5C31;&amp;#x7EEA;&amp;#x961F;&amp;#x5217;&amp;#x4ECE;&amp;#x4E00;&amp;#x4E2A;&amp;#x62C6;&amp;#x5206;&amp;#x4E3A;&amp;#x82E5;&amp;#x5E72;&amp;#x4E2A;&amp;#xFF0C;&amp;#x5C06;&amp;#x4E0D;&amp;#x540C;&amp;#x7C7B;&amp;#x578B;&amp;#x6216;&amp;#x6027;&amp;#x8D28;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&lt;strong&gt;&amp;#x56FA;&amp;#x5B9A;&amp;#x5206;&amp;#x914D;&lt;/strong&gt;&amp;#x5728;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x5C31;&amp;#x7EEA;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x5C31;&amp;#x7EEA;&amp;#x961F;&amp;#x5217;&amp;#x91C7;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&amp;#xFF0C;&lt;strong&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x5C31;&amp;#x7EEA;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#xFF0C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x5C31;&amp;#x7EEA;&amp;#x961F;&amp;#x5217;&amp;#x672C;&amp;#x8EAB;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x3002;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x591A;&amp;#x7EA7;&amp;#x961F;&amp;#x5217;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&amp;#x7531;&amp;#x4E8E;&amp;#x8BBE;&amp;#x7F6E;&amp;#x591A;&amp;#x4E2A;&amp;#x5C31;&amp;#x7EEA;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x5BF9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5C31;&amp;#x7EEA;&amp;#x961F;&amp;#x5217;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5B9E;&amp;#x65BD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x9488;&amp;#x5BF9;&amp;#x4E0D;&amp;#x540C;&amp;#x7528;&amp;#x6237;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x9700;&amp;#x6C42;&amp;#xFF0C;&amp;#x5F88;&amp;#x5BB9;&amp;#x6613;&amp;#x63D0;&amp;#x4F9B;&amp;#x591A;&amp;#x79CD;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B56;&amp;#x7565;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x9AD8;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x7684;&amp;#x961F;&amp;#x5217;&amp;#x6267;&amp;#x884C;&amp;#x5B8C;&amp;#x6210;&amp;#x540E;&amp;#x4F4E;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x7684;&amp;#x961F;&amp;#x5217;&amp;#x624D;&amp;#x80FD;&amp;#x5F00;&amp;#x59CB;&amp;#x6267;&amp;#x884C;&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;826-multi-level-feedback-&amp;#x591A;&amp;#x7EA7;&amp;#x53CD;&amp;#x9988;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&amp;#x6539;&amp;#x8FDB;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#826-multi-level-feedback-&amp;#x591A;&amp;#x7EA7;&amp;#x53CD;&amp;#x9988;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&amp;#x6539;&amp;#x8FDB;&#34;&gt;#&lt;/a&gt; 8.2.6 Multi-level Feedback &amp;#x591A;&amp;#x7EA7;&amp;#x53CD;&amp;#x9988;&amp;#x8C03;&amp;#x5EA6;&amp;#x7B97;&amp;#x6CD5;&amp;#xFF08;&amp;#x6539;&amp;#x8FDB;&amp;#xFF09;&lt;/h5&gt;
&lt;p&gt;&amp;#x57FA;&amp;#x672C;&amp;#x548C;&amp;#x4E0A;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B97;&amp;#x6CD5;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#x5728;&amp;#x4E0E;&amp;#x9AD8;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x7684;&amp;#x961F;&amp;#x5217;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5F39;&amp;#x51FA;&amp;#x540E;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x6267;&amp;#x884C;&amp;#x5B8C;&amp;#x5C31;&amp;#x5BF9;&amp;#x63A8;&amp;#x5165;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x7684;&amp;#x961F;&amp;#x5217;&lt;/p&gt;
&lt;h5 id=&#34;827-guaranteed-scheduling&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#827-guaranteed-scheduling&#34;&gt;#&lt;/a&gt; 8.2.7 Guaranteed Scheduling&lt;/h5&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5206;&amp;#x914D;&amp;#x4E00;&amp;#x4E2A;&amp;#x516C;&amp;#x5E73;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x4EFD;&amp;#x989D;&amp;#x6216;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFD;&amp;#x989D;&amp;#x6216;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x4F1A;&amp;#x6839;&amp;#x636E;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x548C;&amp;#x9700;&amp;#x6C42;&amp;#x52A8;&amp;#x6001;&amp;#x8C03;&amp;#x6574;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6CA1;&amp;#x6709;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x7684;&amp;#x5168;&amp;#x90E8;&amp;#x65F6;&amp;#x95F4;&amp;#x4EFD;&amp;#x989D;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x4EFD;&amp;#x989D;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x88AB;&amp;#x5176;&amp;#x4ED6;&amp;#x9700;&amp;#x8981;&amp;#x66F4;&amp;#x591A;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5229;&amp;#x7528;&amp;#x3002;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8D85;&amp;#x8FC7;&amp;#x4E86;&amp;#x5B83;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x4EFD;&amp;#x989D;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x6216;&amp;#x65F6;&amp;#x95F4;&amp;#x4EFD;&amp;#x989D;&amp;#x4F1A;&amp;#x5728;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8C03;&amp;#x5EA6;&amp;#x5468;&amp;#x671F;&amp;#x4E2D;&amp;#x88AB;&amp;#x964D;&amp;#x4F4E;&amp;#xFF0C;&amp;#x4EE5;&amp;#x7ED9;&amp;#x5176;&amp;#x4ED6;&amp;#x8FDB;&amp;#x7A0B;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x673A;&amp;#x4F1A;&amp;#x3002;&lt;/p&gt;
&lt;h5 id=&#34;828-lottery-scheduling&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#828-lottery-scheduling&#34;&gt;#&lt;/a&gt; 8.2.8 Lottery Scheduling&lt;/h5&gt;
&lt;p&gt;&amp;#x5F88;&amp;#x5E38;&amp;#x7528;&amp;#xFF01;&lt;/p&gt;
&lt;p&gt;Probability-based &amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5206;&amp;#x914D;&amp;#x4E00;&amp;#x5B9A;&amp;#x6570;&amp;#x91CF;&amp;#x7684;&amp;#x5F69;&amp;#x7968;&amp;#xFF0C;&amp;#x800C;&amp;#x8FDB;&amp;#x7A0B;&amp;#x83B7;&amp;#x5F97; CPU &amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x673A;&amp;#x4F1A;&amp;#x4E0E;&amp;#x5B83;&amp;#x6301;&amp;#x6709;&amp;#x7684;&amp;#x5F69;&amp;#x7968;&amp;#x6570;&amp;#x91CF;&amp;#x6210;&amp;#x6B63;&amp;#x6BD4;&amp;#x3002;&amp;#x5F53;&amp;#x7CFB;&amp;#x7EDF;&amp;#x9700;&amp;#x8981;&amp;#x9009;&amp;#x62E9;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8981;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x65F6;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x8FDB;&amp;#x884C;&amp;#x4E00;&amp;#x6B21; &amp;#x201C;&amp;#x62BD;&amp;#x5956;&amp;#x201D;&amp;#xFF0C;&amp;#x968F;&amp;#x673A;&amp;#x9009;&amp;#x62E9;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F69;&amp;#x7968;&amp;#xFF0C;&amp;#x62E5;&amp;#x6709;&amp;#x8BE5;&amp;#x5F69;&amp;#x7968;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x83B7;&amp;#x5F97;&amp;#x6267;&amp;#x884C;&amp;#x673A;&amp;#x4F1A;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7ED9;&amp;#x9AD8;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x6216;&amp;#x8005;&amp;#x77ED;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x5F69;&amp;#x7968;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4F18;&amp;#x70B9;&amp;#xFF1A;&lt;/p&gt;
&lt;h5 id=&#34;829-fair-share-scheduling&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#829-fair-share-scheduling&#34;&gt;#&lt;/a&gt; 8.2.9 Fair-Share Scheduling&lt;/h5&gt;
&lt;p&gt;&amp;#x5206;&amp;#x4E3A;&amp;#x4E24;&amp;#x79CD;&amp;#xFF1A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x516C;&amp;#x5E73;&amp;#x8C03;&amp;#x5EA6;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x4E4B;&amp;#x524D;&amp;#x8BA8;&amp;#x8BBA;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x7247;&amp;#x8F6E;&amp;#x8F6C;&amp;#xFF1B;&amp;#x7528;&amp;#x6237;&amp;#x516C;&amp;#x5E73;&amp;#x8C03;&amp;#x5EA6;&amp;#xFF0C;&amp;#x7ED9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7528;&amp;#x6237;&amp;#x7A0B;&amp;#x5E8F;&amp;#x540C;&amp;#x7B49;&amp;#x7684; CPU &amp;#x8BBF;&amp;#x95EE;&amp;#x65F6;&amp;#x95F4;&amp;#x6743;&amp;#x9650;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&#34;83-scheduling-in-real-time-systems&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#83-scheduling-in-real-time-systems&#34;&gt;#&lt;/a&gt; 8.3 Scheduling in Real-Time systems&lt;/h4&gt;
</content>
        <category term="操作系统" />
        <updated>2024-06-04T07:48:31.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/05/27/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F--Deadlocks/</id>
        <title>操作系统--Deadlocks</title>
        <link rel="alternate" href="http://example.com/2024/05/27/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F--Deadlocks/"/>
        <content type="html">&lt;h2 id=&#34;1-&amp;#x8D44;&amp;#x6E90;resources&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-&amp;#x8D44;&amp;#x6E90;resources&#34;&gt;#&lt;/a&gt; 1 &amp;#x8D44;&amp;#x6E90; Resources&lt;/h2&gt;
&lt;h3 id=&#34;11preemptable-resource&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11preemptable-resource&#34;&gt;#&lt;/a&gt; 1.1Preemptable Resource&lt;/h3&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&amp;#x8D44;&amp;#x6E90;&amp;#x8FD9;&amp;#x7C7B;&amp;#x8D44;&amp;#x6E90;&amp;#x88AB;&amp;#x62A2;&amp;#x5360;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5F71;&amp;#x54CD;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x8FD0;&amp;#x884C;&amp;#x3002;&lt;br&gt;
&amp;#x6BD4;&amp;#x5982;&amp;#xFF1A;&lt;strong&gt;memory&lt;/strong&gt;&amp;#x3001;&lt;strong&gt;disk&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;12-nonpreemptable-resource&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-nonpreemptable-resource&#34;&gt;#&lt;/a&gt; 1.2 Nonpreemptable Resource&lt;/h3&gt;
&lt;p&gt;&amp;#x975E;&amp;#x53EF;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x8BE5;&amp;#x7C7B;&amp;#x8D44;&amp;#x6E90;&amp;#x88AB;&amp;#x8BBF;&amp;#x95EE;&amp;#x65F6;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x8BBF;&amp;#x95EE;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4F1A;&amp;#x8FDB;&amp;#x5165;&amp;#x963B;&amp;#x585E;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x7B49;&amp;#x5F85;&amp;#x8BE5;&amp;#x8D44;&amp;#x6E90;&amp;#x88AB;&amp;#x91CA;&amp;#x653E;&amp;#x3002;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x7533;&amp;#x8BF7;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#xFF1A;&amp;#x8BF7;&amp;#x6C42;&amp;#x8D44;&amp;#x6E90;&amp;#x3001;&amp;#x4F7F;&amp;#x7528;&amp;#x8D44;&amp;#x6E90;&amp;#x3001;&amp;#x91CA;&amp;#x653E;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x8981;&amp;#x8C03;&amp;#x7528;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982; open &amp;#x8C03;&amp;#x7528;&amp;#x7B49;&amp;#x3002;&lt;/p&gt;
&lt;h2 id=&#34;2-&amp;#x6B7B;&amp;#x9501;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-&amp;#x6B7B;&amp;#x9501;&#34;&gt;#&lt;/a&gt; 2 &amp;#x6B7B;&amp;#x9501;&lt;/h2&gt;
&lt;p&gt;A set of processes is deadlocked if each process in the&lt;br&gt;
set is waiting for an event that only another process in&lt;br&gt;
the set can cause.&lt;br&gt;
 &amp;#x7B80;&amp;#x5355;&amp;#x6765;&amp;#x8BF4;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5728;&amp;#x62E5;&amp;#x6709; a &amp;#x8D44;&amp;#x6E90;&amp;#x65F6;&amp;#x8BBF;&amp;#x95EE;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x62E5;&amp;#x6709;&amp;#x7684; b &amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x800C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5728;&amp;#x91CA;&amp;#x653E; b &amp;#x8D44;&amp;#x6E90;&amp;#x4E4B;&amp;#x524D;&amp;#x9700;&amp;#x8981;&amp;#x8BBF;&amp;#x95EE; a &amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x8BF4;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6784;&amp;#x6210;&amp;#x6B7B;&amp;#x9501;&amp;#x3002;&lt;/p&gt;
&lt;h3 id=&#34;21-&amp;#x6B7B;&amp;#x9501;&amp;#x6761;&amp;#x4EF6;condition&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-&amp;#x6B7B;&amp;#x9501;&amp;#x6761;&amp;#x4EF6;condition&#34;&gt;#&lt;/a&gt; 2.1 &amp;#x6B7B;&amp;#x9501;&amp;#x6761;&amp;#x4EF6; Condition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mutual exclusion condition&lt;br&gt;
 &amp;#x6BCF;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5206;&amp;#x914D;&amp;#x7ED9;&amp;#x67D0;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4E0D;&amp;#x7136;&amp;#x5C31;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;Hold and wait condition&lt;br&gt;
 &amp;#x5DF2;&amp;#x7ECF;&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x65B0;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&lt;/li&gt;
&lt;li&gt;No preeption condition&lt;br&gt;
 &amp;#x5DF2;&amp;#x7ECF;&amp;#x5206;&amp;#x914D;&amp;#x7ED9;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x4E0D;&amp;#x80FD;&amp;#x5F3A;&amp;#x5236;&amp;#x6027;&amp;#x7684;&amp;#x88AB;&amp;#x62A2;&amp;#x5360;&amp;#xFF0C;&amp;#x53EA;&amp;#x80FD;&amp;#x88AB;&amp;#x5360;&amp;#x6709;&amp;#x5B83;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x91CA;&amp;#x653E;&lt;/li&gt;
&lt;li&gt;Circular wait condition&lt;br&gt;
 &amp;#x6B7B;&amp;#x9501;&amp;#x53D1;&amp;#x751F;&amp;#x65F6;&amp;#xFF0C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x6709;&amp;#x7531;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EE5;&amp;#x4E0A;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;&amp;#x4E00;&amp;#x6761;&amp;#x73AF;&amp;#x8DEF;&amp;#xFF0C;&amp;#x73AF;&amp;#x8DEF;&amp;#x4E2D;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5360;&amp;#x6709;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&amp;#xFF08;&amp;#x6B7B;&amp;#x9501;&amp;#x53D1;&amp;#x751F;&amp;#x7684;&amp;#x6839;&amp;#x672C;&amp;#x539F;&amp;#x56E0;&amp;#xFF09;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;22-&amp;#x6B7B;&amp;#x9501;&amp;#x5EFA;&amp;#x6A21;modeling&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-&amp;#x6B7B;&amp;#x9501;&amp;#x5EFA;&amp;#x6A21;modeling&#34;&gt;#&lt;/a&gt; 2.2 &amp;#x6B7B;&amp;#x9501;&amp;#x5EFA;&amp;#x6A21; Modeling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x65B9;&amp;#x5757;&lt;/strong&gt;&amp;#x8868;&amp;#x793A;&lt;strong&gt;&amp;#x8D44;&amp;#x6E90;&lt;/strong&gt;&amp;#xFF0C;&lt;strong&gt;&amp;#x5706;&amp;#x5F62;&lt;/strong&gt;&amp;#x8868;&amp;#x793A;&lt;strong&gt;&amp;#x8FDB;&amp;#x7A0B;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x7BAD;&amp;#x5934;&amp;#xFF0C;&amp;#x88AB;&amp;#x5360;&amp;#x7528;&amp;#x8D44;&amp;#x6E90;&amp;#x6307;&amp;#x5411;&amp;#x5360;&amp;#x7528;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF1B;&amp;#x7B49;&amp;#x5F85;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6307;&amp;#x5411;&amp;#x88AB;&amp;#x7B49;&amp;#x5F85;&amp;#x8D44;&amp;#x6E90;&lt;br&gt;
&lt;strong&gt; Resource-Allocation Graph&lt;/strong&gt;&lt;br&gt;
V &amp;#x96C6;&amp;#xFF1A;P &amp;#x96C6;&amp;#x8868;&amp;#x793A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x96C6;&amp;#x5408;&amp;#xFF1B;R &amp;#x96C6;&amp;#x8868;&amp;#x793A;&amp;#x8D44;&amp;#x6E90;&amp;#x96C6;&amp;#x5408;&amp;#xFF1B;&lt;br&gt;
E &amp;#x96C6;&amp;#xFF1A;request edge --- &amp;#x8FDB;&amp;#x7A0B; --&amp;gt; &amp;#x8D44;&amp;#x6E90;&amp;#xFF1B;&amp;#xFF08;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF09;&lt;br&gt;
assignment edge --- &amp;#x8D44;&amp;#x6E90; --&amp;gt; &amp;#x8FDB;&amp;#x7A0B;&amp;#xFF1B;&amp;#xFF08;&amp;#x5206;&amp;#x914D;&amp;#xFF09;&lt;br&gt;
&amp;#x6839;&amp;#x636E;&amp;#x56FE;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x56FE;&amp;#x6CA1;&amp;#x6709; cycle&amp;#xFF0C;&amp;#x6CA1;&amp;#x6709;&amp;#x6B7B;&amp;#x9501;&amp;#xFF1B;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#xFF0C;&amp;#x67D0;&amp;#x7C7B;&amp;#x578B;&amp;#x8D44;&amp;#x6E90;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x53D1;&amp;#x751F;&amp;#x6B7B;&amp;#x9501;&amp;#xFF0C;&amp;#x6709;&amp;#x591A;&amp;#x4E2A;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x53D1;&amp;#x751F;&amp;#x6B7B;&amp;#x9501;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;23-&amp;#x6B7B;&amp;#x9501;&amp;#x89E3;&amp;#x51B3;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-&amp;#x6B7B;&amp;#x9501;&amp;#x89E3;&amp;#x51B3;&#34;&gt;#&lt;/a&gt; 2.3 &amp;#x6B7B;&amp;#x9501;&amp;#x89E3;&amp;#x51B3;&lt;/h3&gt;
&lt;p&gt;&amp;#x601D;&amp;#x60F3;&amp;#xFF1A;&amp;#x7834;&amp;#x574F;&amp;#x6B7B;&amp;#x9501;&amp;#x6784;&amp;#x6210;&amp;#x7684;&amp;#x56DB;&amp;#x4E2A;&amp;#x6761;&amp;#x4EF6;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&#34;231-&amp;#x9E35;&amp;#x9E1F;&amp;#x7B97;&amp;#x6CD5;ostrich&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#231-&amp;#x9E35;&amp;#x9E1F;&amp;#x7B97;&amp;#x6CD5;ostrich&#34;&gt;#&lt;/a&gt; 2.3.1 &amp;#x9E35;&amp;#x9E1F;&amp;#x7B97;&amp;#x6CD5; Ostrich&lt;/h4&gt;
&lt;p&gt;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8BA4;&amp;#x4E3A;&amp;#x6B7B;&amp;#x9501;&amp;#x6839;&amp;#x672C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x53D1;&amp;#x751F;&amp;#x3002;&amp;#x5E94;&amp;#x7528;&amp;#x8FD9;&amp;#x79CD;&amp;#x7B97;&amp;#x6CD5;&amp;#x6709;&amp;#x524D;&amp;#x63D0;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8BBE;&amp;#x8BA1;&amp;#x7684;&amp;#x539F;&amp;#x56E0;&amp;#xFF0C;&amp;#x6B7B;&amp;#x9501;&amp;#x7684;&amp;#x53D1;&amp;#x751F;&amp;#x975E;&amp;#x5E38;&amp;#x7A00;&amp;#x5C11;&amp;#x6216;&amp;#x8005;&amp;#x6B7B;&amp;#x9501;&amp;#x7684;&amp;#x9884;&amp;#x9632; cost &amp;#x975E;&amp;#x5E38;&amp;#x6602;&amp;#x8D35;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&#34;232-deadlock-detection&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#232-deadlock-detection&#34;&gt;#&lt;/a&gt; 2.3.2 Deadlock Detection&lt;/h4&gt;
&lt;p&gt;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5141;&amp;#x8BB8;&amp;#x6B7B;&amp;#x9501;&amp;#x7684;&amp;#x53D1;&amp;#x751F;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F1A;&amp;#x5728;&amp;#x68C0;&amp;#x6D4B;&amp;#x6B7B;&amp;#x9501;&amp;#x53D1;&amp;#x751F;&amp;#x65F6;&amp;#x5E72;&amp;#x9884;&amp;#x89E3;&amp;#x51B3;&amp;#x3002;&amp;#x9884;&amp;#x5148;&amp;#x6267;&amp;#x884C;&amp;#x68C0;&amp;#x6D4B;&amp;#xFF1A;detection algorithm&amp;#xFF1B;&amp;#x68C0;&amp;#x6D4B;&amp;#x5230;&amp;#x6B7B;&amp;#x9501;&amp;#x72B6;&amp;#x6001;&amp;#x89E3;&amp;#x51B3;&amp;#xFF1A;recovery algorithm&lt;/p&gt;
&lt;h5 id=&#34;2321-&amp;#x6709;&amp;#x5411;&amp;#x56FE;&amp;#x73AF;&amp;#x8DEF;&amp;#x68C0;&amp;#x6D4B;&amp;#x7B97;&amp;#x6CD5;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2321-&amp;#x6709;&amp;#x5411;&amp;#x56FE;&amp;#x73AF;&amp;#x8DEF;&amp;#x68C0;&amp;#x6D4B;&amp;#x7B97;&amp;#x6CD5;&#34;&gt;#&lt;/a&gt; 2.3.2.1 &amp;#x6709;&amp;#x5411;&amp;#x56FE;&amp;#x73AF;&amp;#x8DEF;&amp;#x68C0;&amp;#x6D4B;&amp;#x7B97;&amp;#x6CD5;&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7A7A;&amp;#x5217;&amp;#x8868; L&amp;#xFF0C;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x8FB9;&amp;#x6CA1;&amp;#x6709;&amp;#x88AB;&amp;#x6807;&amp;#x8BB0;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x628A;&amp;#x5F53;&amp;#x524D;&amp;#x7684; node &amp;#x63A8;&amp;#x5165; L&amp;#xFF0C;&amp;#x68C0;&amp;#x6D4B; node &amp;#x662F;&amp;#x5426;&amp;#x88AB;&amp;#x63A8;&amp;#x5165; L &amp;#x8FC7;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#xFF0C;&amp;#x8BC1;&amp;#x660E;&amp;#x5B58;&amp;#x5728;&amp;#x73AF;&amp;#x8DEF;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x67E5;&amp;#x770B; node &amp;#x6CA1;&amp;#x88AB;&amp;#x6807;&amp;#x8BB0;&amp;#x7684;&amp;#x51FA;&amp;#x8FB9;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#xFF0C;goto 4 &amp;#xFF1B;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#xFF0C;goto 5 &amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x968F;&amp;#x673A;&amp;#x9009;&amp;#x62E9;&amp;#x4E00;&amp;#x6761;&amp;#x51FA;&amp;#x8FB9;&amp;#xFF0C;&amp;#x628A;&amp;#x5F53;&amp;#x524D;&amp;#x8282;&amp;#x70B9;&amp;#x9009;&amp;#x4E3A;&amp;#x51FA;&amp;#x8FB9;&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8282;&amp;#x70B9;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE; 2 &amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;&amp;#x8BF4;&amp;#x660E;&amp;#x5F53;&amp;#x524D;&amp;#x8282;&amp;#x70B9;&amp;#x904D;&amp;#x5386;&amp;#x5B8C;&amp;#x6BD5;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E0A;&amp;#x4E00;&amp;#x4E2A;&amp;#x8282;&amp;#x70B9;&amp;#xFF0C;goto 3&amp;#xFF1B;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x662F;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x8282;&amp;#x70B9;&amp;#xFF0C;&amp;#x5219;&amp;#x8BF4;&amp;#x660E;&amp;#x8BE5;&amp;#x56FE;&amp;#x6CA1;&amp;#x6709;&amp;#x73AF;&amp;#x8DEF;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x6765;&amp;#x68C0;&amp;#x6D4B;&amp;#x6BCF;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;&amp;#x53EA;&amp;#x6709;&amp;#x5355;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x6B7B;&amp;#x9501;&amp;#x68C0;&amp;#x6D4B;&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;2322-&amp;#x6BCF;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;&amp;#x6709;&amp;#x591A;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x6B7B;&amp;#x9501;&amp;#x68C0;&amp;#x6D4B;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2322-&amp;#x6BCF;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;&amp;#x6709;&amp;#x591A;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x6B7B;&amp;#x9501;&amp;#x68C0;&amp;#x6D4B;&#34;&gt;#&lt;/a&gt; 2.3.2.2 &amp;#x6BCF;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;&amp;#x6709;&amp;#x591A;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x6B7B;&amp;#x9501;&amp;#x68C0;&amp;#x6D4B;&lt;/h5&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x8981;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x5411;&amp;#x91CF;&amp;#x3001;&amp;#x4E24;&amp;#x4E2A;&amp;#x77E9;&amp;#x9635;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resource in existence &amp;#x5411;&amp;#x91CF;&lt;/li&gt;
&lt;li&gt;Resource available &amp;#x5411;&amp;#x91CF;&lt;/li&gt;
&lt;li&gt;Current allocated matrix&lt;/li&gt;
&lt;li&gt;Request matrix&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Deadlock Detection Algorithm&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x4E3B;&amp;#x8981;&amp;#x601D;&amp;#x60F3;&amp;#x662F;&amp;#x5BF9;&amp;#x5411;&amp;#x91CF;&amp;#x8FDB;&amp;#x884C;&amp;#x6BD4;&amp;#x8F83;&amp;#xFF08;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x90FD;&amp;#x8981;&amp;#x6BD4;&amp;#xFF0C;&amp;#x5168;&amp;#x90E8;&amp;#x5C0F;&amp;#x624D;&amp;#x662F;&amp;#x5C0F;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x5C31;&amp;#x662F;&amp;#x5927;&amp;#xFF09;&lt;/li&gt;
&lt;li&gt;&amp;#x5148;&amp;#x67E5;&amp;#x770B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x9700;&amp;#x6C42;&amp;#x77E9;&amp;#x9635;&amp;#x7684;&amp;#x6BCF;&amp;#x5217;&amp;#xFF0C;&amp;#x770B;&amp;#x770B;&amp;#x5206;&amp;#x914D;&amp;#x5411;&amp;#x91CF;&amp;#x80FD;&amp;#x4E0D;&amp;#x80FD;&amp;#x6EE1;&amp;#x8DB3;&lt;/li&gt;
&lt;li&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x627E;&amp;#x5230;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;&amp;#x628A;&amp;#x5F53;&amp;#x524D;&amp;#x5206;&amp;#x914D;&amp;#x77E9;&amp;#x9635;&amp;#x8BE5;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6240;&amp;#x5728;&amp;#x884C;&amp;#x7684;&amp;#x5217;&amp;#x52A0;&amp;#x5230;&amp;#x53EF;&amp;#x7528;&amp;#x5411;&amp;#x91CF;&amp;#xFF0C;&amp;#x6807;&amp;#x8BB0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x77E9;&amp;#x9635;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B65;&amp;#xFF08;&amp;#x5C31;&amp;#x662F;&amp;#x5047;&amp;#x8BBE;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x8FD0;&amp;#x884C;&amp;#x901F;&amp;#x5EA6;&amp;#x51E0;&amp;#x4E4E;&amp;#x65E0;&amp;#x7A77;&amp;#x5FEB;&amp;#xFF09;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;&amp;#x7B97;&amp;#x6CD5;&amp;#x7EC8;&amp;#x6B62;&amp;#xFF0C;&amp;#x8BF4;&amp;#x660E;&amp;#x4F1A;&amp;#x6B7B;&amp;#x9501;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;233-recovery&amp;#x7B97;&amp;#x6CD5;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#233-recovery&amp;#x7B97;&amp;#x6CD5;&#34;&gt;#&lt;/a&gt; 2.3.3 Recovery &amp;#x7B97;&amp;#x6CD5;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Recovery through preemption&lt;/li&gt;
&lt;li&gt;Recovery through rollback&lt;/li&gt;
&lt;li&gt;Recovery through killing processes&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;234-&amp;#x6B7B;&amp;#x9501;&amp;#x907F;&amp;#x514D;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#234-&amp;#x6B7B;&amp;#x9501;&amp;#x907F;&amp;#x514D;&#34;&gt;#&lt;/a&gt; 2.3.4 &amp;#x6B7B;&amp;#x9501;&amp;#x907F;&amp;#x514D;&lt;/h4&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528; deadlock-avoidance algorithm&lt;/p&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B80;&amp;#x5355;&amp;#x4F46;&amp;#x975E;&amp;#x5E38;&amp;#x6709;&amp;#x7528;&amp;#x7684;&amp;#x6A21;&amp;#x578B;&amp;#x3001;&amp;#x9700;&amp;#x8981;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x58F0;&amp;#x660E;&amp;#x81EA;&amp;#x5DF1;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x6700;&amp;#x5927;&amp;#x503C;&lt;/p&gt;
&lt;p&gt;&amp;#x8BE5;&amp;#x7B97;&amp;#x6CD5;&amp;#x7684;&amp;#x91CD;&amp;#x8981;&amp;#x57FA;&amp;#x7840;&amp;#xFF1A;safe state&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;safe state&amp;#xFF1A;&amp;#x6CA1;&amp;#x6709;&amp;#x6B7B;&amp;#x9501;&amp;#x4E14;&amp;#x53EF;&amp;#x4EE5;&amp;#x4EE5;&amp;#x67D0;&amp;#x79CD;&amp;#x987A;&amp;#x5E8F;&amp;#x5904;&amp;#x7406;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6765;&amp;#x6EE1;&amp;#x8DB3;&amp;#x6240;&amp;#x6709;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x9700;&amp;#x6C42;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;system is in safe state&amp;#xFF1A;&amp;#x5B58;&amp;#x5728;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6267;&amp;#x884C;&amp;#x5E8F;&amp;#x5217;&lt;/li&gt;
&lt;li&gt;unsafe state&amp;#xFF1A;possiable of deadlock&lt;/li&gt;
&lt;li&gt;If a system is in safe state =&amp;gt; no deadlocks&lt;/li&gt;
&lt;li&gt;If a system is in unsafe state =&amp;gt; &lt;strong&gt;possibility&lt;/strong&gt; of deadlock&lt;/li&gt;
&lt;li&gt;Avoidance =&amp;gt; ensure that system will never enter an unsafe state&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5982;&amp;#x4F55;&amp;#x786E;&amp;#x4FDD;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E0D;&amp;#x4F1A;&amp;#x8FDB;&amp;#x5165; unsafe state &amp;#x5462;&amp;#xFF1F;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Banker Algorithm &amp;#x5927;&amp;#x540D;&amp;#x9F0E;&amp;#x9F0E;&amp;#x7684;&amp;#x94F6;&amp;#x884C;&amp;#x5BB6;&amp;#x7B97;&amp;#x6CD5;
&lt;ul&gt;
&lt;li&gt;&amp;#x5BF9;&amp;#x6BCF;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7684;&amp;#x94F6;&amp;#x884C;&amp;#x5BB6;&amp;#x7B97;&amp;#x6CD5;&amp;#xFF1A;&amp;#x628A; Free &amp;#x52A0;&amp;#x5230; Has &amp;#x91CC;&amp;#x6BD4;&amp;#x8F83; Max&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5B58;&amp;#x5728;&amp;#x6EE1;&amp;#x8DB3;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5C31;&amp;#x5206;&amp;#x914D;&amp;#x8D44;&amp;#x6E90;&amp;#x7B49;&amp;#x5F85;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5B8C;&amp;#x6210;&amp;#x91CA;&amp;#x653E;&amp;#x7EE7;&amp;#x7EED;&amp;#x4E0B;&amp;#x4E00;&amp;#x8F6E;&amp;#x8F6E;&amp;#x8BE2;&amp;#xFF0C;&amp;#x53EA;&amp;#x5230;&amp;#x6240;&amp;#x6709;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6267;&amp;#x884C;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x91CD;&amp;#x70B9;&amp;#xFF1A;&lt;strong&gt;&amp;#x5BF9;&amp;#x6BCF;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x6709;&amp;#x591A;&amp;#x4E2A;&amp;#x7684;&amp;#x94F6;&amp;#x884C;&amp;#x5BB6;&amp;#x7B97;&amp;#x6CD5;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;2341-bankers-algorithm-for-multiple-resources&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2341-bankers-algorithm-for-multiple-resources&#34;&gt;#&lt;/a&gt; 2.3.4.1 Banker&amp;apos;s Algorithm for Multiple Resources&lt;/h5&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x63A2;&amp;#x8BA8;&amp;#x4E00;&amp;#x4E0B;&amp;#x600E;&amp;#x4E48;&amp;#x67E5;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x72B6;&amp;#x6001;&amp;#x662F;&amp;#x5426;&amp;#x662F; safe &amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x641C;&amp;#x7D22;&amp;#x6709;&amp;#x6CA1;&amp;#x6709;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x88AB;&amp;#x6EE1;&amp;#x8DB3;&amp;#xFF08;need&amp;lt; has+free&amp;#xFF09;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x6B7B;&amp;#x9501; =&amp;#x300B;unsafe state&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x5B58;&amp;#x5728;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5C31;&amp;#x6807;&amp;#x8BB0;&amp;#x8FDB;&amp;#x7A0B;&amp;#x8FD0;&amp;#x884C;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x91CA;&amp;#x653E;&amp;#x8D44;&amp;#x6E90;&amp;#x5230; free &amp;#x4E2D;&lt;/li&gt;
&lt;li&gt;&amp;#x91CD;&amp;#x590D; 1&amp;#x3001;2&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x90FD;&amp;#x88AB;&amp;#x6807;&amp;#x8BB0; =&amp;#x300B;safe state&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x94F6;&amp;#x884C;&amp;#x5BB6;&amp;#x7B97;&amp;#x6CD5;&amp;#x89C2;&amp;#x70B9;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trade-off&amp;#xFF1A;&amp;#x4FDD;&amp;#x5B88;&amp;#x3001;&amp;#x51CF;&amp;#x5C11;&amp;#x4E86;&amp;#x5E76;&amp;#x884C;&amp;#x6027;&amp;#xFF1B;&lt;/li&gt;
&lt;li&gt;Not very practicable
&lt;ul&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6240;&amp;#x9700;&amp;#x7684;&amp;#x6700;&amp;#x5927;&amp;#x8D44;&amp;#x6E90;&amp;#x6570;&amp;#x662F;&amp;#x5F88;&amp;#x96BE;&amp;#x88AB;&amp;#x63D0;&amp;#x524D;&amp;#x9884;&amp;#x77E5;&amp;#x7684;&lt;/li&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6570;&amp;#x4E0D;&amp;#x662F;&amp;#x56FA;&amp;#x5B9A;&amp;#x4E0D;&amp;#x53D8;&amp;#x7684;&lt;/li&gt;
&lt;li&gt;&amp;#x88AB;&amp;#x58F0;&amp;#x660E;&amp;#x4E3A;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x968F;&amp;#x65F6;&amp;#x53EF;&amp;#x80FD;&amp;#x6D88;&amp;#x5931;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;235-&amp;#x6B7B;&amp;#x9501;&amp;#x9884;&amp;#x9632;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#235-&amp;#x6B7B;&amp;#x9501;&amp;#x9884;&amp;#x9632;&#34;&gt;#&lt;/a&gt; 2.3.5 &amp;#x6B7B;&amp;#x9501;&amp;#x9884;&amp;#x9632;&lt;/h4&gt;
&lt;p&gt;&amp;#x6253;&amp;#x7834;&amp;#x6B7B;&amp;#x9501;&amp;#x4EA7;&amp;#x751F;&amp;#x7684;&amp;#x56DB;&amp;#x5927;&amp;#x6761;&amp;#x4EF6;&lt;/p&gt;
&lt;p&gt;&amp;#x590D;&amp;#x4E60;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6B7B;&amp;#x9501;&amp;#x4EA7;&amp;#x751F;&amp;#x7684;&amp;#x56DB;&amp;#x5927;&amp;#x6761;&amp;#x4EF6;&amp;#x5206;&amp;#x522B;&amp;#x662F;&amp;#xFF1A;&lt;strong&gt;Mutux Exclution&amp;#x3001;Hold and wait&amp;#x3001;No Preemptive&amp;#x3001;Circular Wait&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Attacking Mutux Exclusion&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Some devices can be spooled
&lt;ul&gt;
&lt;li&gt;&amp;#x6BD4;&amp;#x5982;&amp;#x6253;&amp;#x5370;&amp;#x673A;&amp;#xFF0C;&amp;#x5355;&amp;#x72EC;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E00;&amp;#x4E2A;&amp;#x6253;&amp;#x5370;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E13;&amp;#x95E8;&amp;#x8D1F;&amp;#x8D23;&amp;#x6253;&amp;#x5370;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x72EC;&amp;#x5360;&amp;#x6253;&amp;#x5370;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5F97;&amp;#x6253;&amp;#x5370;&amp;#x673A;&amp;#x4E00;&amp;#x76F4;&amp;#x51FA;&amp;#x4E8E;&amp;#x88AB;&amp;#x5360;&amp;#x7528;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spooling space is limited, so deadlock is still possible with this decision&lt;/li&gt;
&lt;li&gt;&amp;#x539F;&amp;#x5219;
&lt;ul&gt;
&lt;li&gt;&amp;#x907F;&amp;#x514D;&amp;#x5206;&amp;#x914D;&amp;#x8D44;&amp;#x6E90;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x7EDD;&amp;#x5BF9;&amp;#x9700;&amp;#x8981;&amp;#x7684;&lt;/li&gt;
&lt;li&gt;&amp;#x5C3D;&amp;#x53EF;&amp;#x80FD;&amp;#x5C11;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x5360;&amp;#x6709;&amp;#x8D44;&amp;#x6E90;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;#x95EE;&amp;#x9898;
&lt;ul&gt;
&lt;li&gt;&amp;#x4E0D;&amp;#x662F;&amp;#x6240;&amp;#x6709;&amp;#x7684; device &amp;#x90FD;&amp;#x53EF;&amp;#x4EE5; spool&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Attacking Hold and Wait&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x8981;&amp;#x6C42;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5F00;&amp;#x59CB;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x8BF7;&amp;#x6C42;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x56E0;&amp;#x4E3A;&amp;#x8D44;&amp;#x6E90;&amp;#x88AB;&amp;#x5176;&amp;#x4ED6;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5360;&amp;#x7528;&amp;#x800C;&amp;#x7B49;&amp;#x5F85;&lt;/li&gt;
&lt;li&gt;&amp;#x95EE;&amp;#x9898;
&lt;ul&gt;
&lt;li&gt;&amp;#x53EF;&amp;#x80FD;&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x5728;&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&lt;/li&gt;
&lt;li&gt;&amp;#x4ECD;&amp;#x7136;&amp;#x53EF;&amp;#x80FD;&amp;#x8BBF;&amp;#x95EE;&amp;#x5230;&amp;#x88AB;&amp;#x522B;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5360;&amp;#x7528;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x6539;&amp;#x8FDB;&amp;#xFF1A;&amp;#x4E00;&amp;#x65E6;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0D;&amp;#x5230;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x5C31;&amp;#x653E;&amp;#x5F03;&amp;#x73B0;&amp;#x6709;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0B;&amp;#x4E00;&amp;#x6B21;&amp;#x8BF7;&amp;#x6C42;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Attacking No Preemption Condition&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x53EF;&amp;#x62A2;&amp;#x5360;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;&amp;#x975E;&amp;#x5E38;&amp;#x96BE;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x4E0D;&amp;#x5207;&amp;#x5B9E;&amp;#x9645;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x6253;&amp;#x5370;&amp;#x673A;&amp;#x5C31;&amp;#x4E0D;&amp;#x80FD;&amp;#x5728;&amp;#x5DE5;&amp;#x4F5C;&amp;#x65F6;&amp;#x88AB;&amp;#x62A2;&amp;#x5360;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Attacking the Circular Wait Condition&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x4E00;&amp;#x6B21;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E00;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x91CA;&amp;#x653E;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E00;&amp;#x4E2A;&lt;/li&gt;
&lt;li&gt;&amp;#x5BF9;&amp;#x8D44;&amp;#x6E90;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5168;&amp;#x5C40;&amp;#x7684;&amp;#x6392;&amp;#x5E8F;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x5FC5;&amp;#x987B;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x9012;&amp;#x589E;&lt;/li&gt;
&lt;li&gt;&amp;#x5BF9;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E8C;&amp;#x8FDB;&amp;#x884C;&amp;#x6539;&amp;#x8FDB;&amp;#xFF1A;&amp;#x6CA1;&amp;#x6709;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7533;&amp;#x8BF7;&amp;#x6BD4;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5360;&amp;#x6709;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x66F4;&amp;#x4F4E;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x627E;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x5408;&amp;#x9002;&amp;#x7684; numbering &amp;#x6765;&amp;#x6EE1;&amp;#x8DB3;&amp;#x6240;&amp;#x6709;&amp;#x4EBA;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#xFF1B;&amp;#x589E;&amp;#x52A0;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x7684;&amp;#x8D1F;&amp;#x62C5;&amp;#x6765;&amp;#x8BB0;&amp;#x5FC6; numbering&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-other-issue&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-other-issue&#34;&gt;#&lt;/a&gt; 3 Other Issue&lt;/h2&gt;
&lt;h3 id=&#34;31-two-phase-locking&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-two-phase-locking&#34;&gt;#&lt;/a&gt; 3.1 Two-Phase Locking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Phase one
&lt;ul&gt;
&lt;li&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5BF9;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x8BB0;&amp;#x5F55;&amp;#x8FDB;&amp;#x884C;&amp;#x67B7;&amp;#x9501;&amp;#xFF0C;&amp;#x4E00;&amp;#x6B21;&amp;#x9501;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BB0;&amp;#x5F55;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Phase two
&lt;ul&gt;
&lt;li&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5728;&amp;#x9636;&amp;#x6BB5;&amp;#x4E00;&amp;#x6210;&amp;#x529F;&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6210;&amp;#x66F4;&amp;#x65B0;&amp;#x7136;&amp;#x540E;&amp;#x91CA;&amp;#x653E;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x9501;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;32-communication-deadlocks&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-communication-deadlocks&#34;&gt;#&lt;/a&gt; 3.2 Communication Deadlocks&lt;/h3&gt;
&lt;p&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6C60;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x90FD;&amp;#x5728;&amp;#x7B49;&amp;#x5F85;&amp;#x8BE5;&amp;#x8FDB;&amp;#x7A0B;&amp;#x6C60;&amp;#x4E2D;&amp;#x7684;&amp;#x5176;&amp;#x4ED6;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&lt;/p&gt;
&lt;p&gt;solution&amp;#xFF1A;&amp;#x8BBE;&amp;#x7F6E; timeout&lt;/p&gt;
&lt;h3 id=&#34;33-livelock&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-livelock&#34;&gt;#&lt;/a&gt; 3.3 Livelock&lt;/h3&gt;
&lt;p&gt;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4EFB;&amp;#x7136;&amp;#x5728;&amp;#x8FD0;&amp;#x884C;&amp;#x4F46;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x5B9E;&amp;#x9645;&amp;#x52A8;&amp;#x4F5C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982; polling&amp;#xFF08;busy waiting&amp;#xFF09;.&lt;/p&gt;
&lt;h3 id=&#34;34-starvation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-starvation&#34;&gt;#&lt;/a&gt; 3.4 starvation&lt;/h3&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x79CD;&amp;#x7B97;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x8C03;&amp;#x5EA6;&amp;#xFF0C;&amp;#x6700;&amp;#x77ED;&amp;#x4F5C;&amp;#x4E1A;&amp;#x4F18;&amp;#x5148;&amp;#xFF0C;&amp;#x5927;&amp;#x4F5C;&amp;#x4E1A;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4F1A;&amp;#x88AB;&amp;#x9965;&amp;#x997F;&amp;#x3002;&lt;/p&gt;
</content>
        <category term="操作系统" />
        <updated>2024-05-27T02:48:31.000Z</updated>
    </entry>
</feed>
